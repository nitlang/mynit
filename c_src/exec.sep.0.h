#include "nit.common.h"
extern const int COLOR_exec__Process__data;
long exec__NativeProcess__id(void* self);
long exec__Process__id(val* self);
short int exec__NativeProcess__is_finished(void* self);
short int exec__Process__is_finished(val* self);
void exec__NativeProcess__wait(void* self);
extern const int COLOR_exec__Process__is_finished;
void exec__Process__wait(val* self);
long exec__NativeProcess__status(void* self);
long exec__Process__status(val* self);
extern const int COLOR_exec__Process__execute;
void exec__Process__init(val* self, val* p0, val* p1);
void exec__Process__init_(val* self, val* p0);
void exec__Process__from_a(val* self, val* p0, val* p1);
val* NEW_string__Buffer(const struct type* type);
extern const struct type type_string__Buffer;
extern const int COLOR_string__Buffer__init;
void CHECK_NEW_string__Buffer(val*);
extern const int COLOR_abstract_collection__Sequence__append;
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
extern const int COLOR_abstract_collection__SimpleCollection__add;
extern const int COLOR_abstract_collection__Iterator__next;
extern const int COLOR_abstract_collection__Collection__length;
extern const int COLOR_string__String__to_cstring;
extern const int COLOR_string__Object__to_s;
extern const int COLOR_exec__Process__basic_exec_execute;
extern const int COLOR_exec__Process__data_61d;
void exec__Process__execute(val* self, val* p0, val* p1, long p2);
extern const int COLOR_exec__Process___64ddata;
void* exec__Process__data(val* self);
void exec__Process__data_61d(val* self, void* p0);
#include "exec_nit.h"
void* exec__Process__basic_exec_execute(val* self, char* p0, char* p1, long p2, long p3);
extern const int COLOR_exec__IProcess___64dstream_in;
val* exec__IProcess__stream_in(val* self);
void exec__IProcess__stream_in_61d(val* self, val* p0);
extern const int COLOR_exec__IProcess__stream_in;
extern const int COLOR_stream__IOS__close;
void exec__IProcess__close(val* self);
extern const int COLOR_stream__IStream__read_char;
long exec__IProcess__read_char(val* self);
extern const int COLOR_stream__IStream__eof;
short int exec__IProcess__eof(val* self);
val* NEW_stream__FDIStream(const struct type* type);
extern const struct type type_stream__FDIStream;
long exec__NativeProcess__out_fd(void* self);
extern const int COLOR_stream__FDIStream__init;
void CHECK_NEW_stream__FDIStream(val*);
extern const int COLOR_exec__IProcess__stream_in_61d;
void exec__IProcess__init(val* self, val* p0, val* p1);
void exec__IProcess__init_(val* self, val* p0);
void exec__IProcess__from_a(val* self, val* p0, val* p1);
extern const int COLOR_exec__OProcess___64dstream_out;
val* exec__OProcess__stream_out(val* self);
void exec__OProcess__stream_out_61d(val* self, val* p0);
extern const int COLOR_exec__OProcess__stream_out;
void exec__OProcess__close(val* self);
extern const int COLOR_stream__OStream__is_writable;
short int exec__OProcess__is_writable(val* self);
extern const int COLOR_stream__OStream__write;
void exec__OProcess__write(val* self, val* p0);
val* NEW_stream__FDOStream(const struct type* type);
extern const struct type type_stream__FDOStream;
long exec__NativeProcess__in_fd(void* self);
extern const int COLOR_stream__FDOStream__init;
void CHECK_NEW_stream__FDOStream(val*);
extern const int COLOR_exec__OProcess__stream_out_61d;
void exec__OProcess__init(val* self, val* p0, val* p1);
void exec__OProcess__init_(val* self, val* p0);
void exec__OProcess__from_a(val* self, val* p0, val* p1);
void exec__IOProcess__close(val* self);
void exec__IOProcess__init(val* self, val* p0, val* p1);
void exec__IOProcess__init_(val* self, val* p0);
void exec__IOProcess__from_a(val* self, val* p0, val* p1);
long exec__NativeString__system(char* self);
long exec__Sys__system(val* self, val* p0);
long exec__NativeProcess__err_fd(void* self);
