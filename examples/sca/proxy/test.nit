# This file is part of NIT ( http://www.nitlanguage.org ).
#
# Copyright 2014 Johann DUBOIS <johann.dubois@outlook.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This module use SCA with context and proxy files
# These files are currently generated manually, but it can be automatically generated by parsing the configuration file "calculator.composite"module test
module test

import sca
import addition
import additionContext
import multiplication
import multiplicationContext
import calculator


# Load the composite
var composite = new SCAComposite.with_name("calculator")

var additionContext = new AdditionContext.with_name("additionContext")
var multiplicationContext = new MultiplicationContext.with_name("multiplicationContext")
composite.add additionContext
composite.add multiplicationContext
# end loading

# Using the calculator
var calculator = new Calculator(composite)

# Call to methods
var sum = calculator.addition(20, 10) 
var result = calculator.multiplication(sum, 2)


print "calculator.addition(20, 10) : {sum}"
print "calculator.multiplication({sum}, 2) : {result}"
