#include "nit.common.h"
extern const int COLOR_file__Object__stdout;
extern const int COLOR_string__Object__to_s;
extern const int COLOR_stream__OStream__write;
void file__Object__printn(val* self, val* p0);
val* string__NativeString__to_s_with_length(char* self, long p0);
void file__Object__print(val* self, val* p0);
extern const int COLOR_file__Object__stdin;
extern const int COLOR_stream__IStream__read_char;
char file__Object__getc(val* self);
extern const int COLOR_stream__IStream__read_line;
val* file__Object__gets(val* self);
extern const int COLOR_file__Object__file_getcwd;
val* string__NativeString__to_s(char* self);
val* file__Object__getcwd(val* self);
#include "file_nit.h"
char* file__Object__file_getcwd(val* self);
extern const int COLOR_file__FStream___path;
val* file__FStream__path(val* self);
extern const int COLOR_file__FStream___file;
extern const int COLOR_file__NativeFile__file_stat;
void* file__FStream__file_stat(val* self);
void file__FStream__init(val* self);
extern const int COLOR_stream__IStream__eof;
extern const int COLOR_stream__IOS__close;
extern const int COLOR_string__String__to_cstring;
void* file__NativeFile__io_open_read(void* self, char* p0);
extern const int COLOR_file__IFStream___end_reached;
extern const int COLOR_stream__BufferedIStream___buffer_pos;
extern const int COLOR_stream__BufferedIStream___buffer;
extern const int COLOR_abstract_collection__RemovableCollection__clear;
void file__IFStream__reopen(val* self);
extern const int COLOR_file__NativeFile__io_close;
void file__IFStream__close(val* self);
extern const int COLOR_string__AbstractString___items;
extern const int COLOR_string__Buffer___capacity;
extern const int COLOR_file__NativeFile__io_read;
extern const struct type type_kernel__Int;
extern const int COLOR_array__AbstractArrayRead___length;
void file__IFStream__fill_buffer(val* self);
short int file__IFStream__end_reached(val* self);
extern const int COLOR_file__FStream__init;
extern const int COLOR_stream__BufferedIStream__init;
extern const int COLOR_stream__BufferedIStream__prepare_buffer;
void file__IFStream__open(val* self, val* p0);
void file__IFStream__init(val* self);
void file__IFStream__without_file(val* self);
extern const int COLOR_file__OFStream___writable;
extern const int COLOR_abstract_collection__Collection__length;
extern const int COLOR_file__OFStream__write_native;
void file__OFStream__write(val* self, val* p0);
short int file__OFStream__is_writable(val* self);
void file__OFStream__close(val* self);
extern const int COLOR_file__NativeFile__io_write;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arraykernel__Object;
val* NEW_array__NativeArray(int length, const struct type* type);
extern const struct type type_array__NativeArraykernel__Object;
extern const int COLOR_array__Array__with_native;
void CHECK_NEW_array__Array(val*);
extern const int COLOR_file__Object__printn;
void file__OFStream__write_native(val* self, char* p0, long p1);
void* file__NativeFile__io_open_write(void* self, char* p0);
void file__OFStream__open(val* self, val* p0);
void file__OFStream__init(val* self);
void file__OFStream__without_file(val* self);
extern const int COLOR_file__IFStream__init;
void* file__NativeFile__native_stdin(void* self);
void file__Stdin__init(val* self);
short int file__Stdin__poll_in(val* self);
extern const int COLOR_file__OFStream__init;
void* file__NativeFile__native_stdout(void* self);
void file__Stdout__init(val* self);
void* file__NativeFile__native_stderr(void* self);
void file__Stderr__init(val* self);
short int file__NativeString__file_exists(char* self);
short int file__String__file_exists(val* self);
void* file__NativeString__file_stat(char* self);
void* file__String__file_stat(val* self);
void* file__NativeString__file_lstat(char* self);
void* file__String__file_lstat(val* self);
short int file__NativeString__file_delete(char* self);
short int file__String__file_delete(val* self);
extern const int COLOR_string__AbstractString__has_suffix;
extern const int COLOR_string__AbstractString__substring;
val* file__String__strip_extension(val* self, val* p0);
extern const int COLOR_array__AbstractArrayRead__last_index_of_from;
extern const int COLOR_string__AbstractString__substring_from;
extern const int COLOR_file__String__strip_extension;
val* file__String__basename(val* self, val* p0);
extern const int COLOR_abstract_collection__SequenceRead___91d_93d;
extern const struct class class_kernel__Char;
val* file__String__dirname(val* self);
extern const int COLOR_string_search__String__split_with;
extern const struct type type_array__Arraystring__String;
extern const int COLOR_array__Array__init;
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
extern const int COLOR_kernel__Object___61d_61d;
extern const int COLOR_abstract_collection__Collection__is_empty;
extern const int COLOR_abstract_collection__SequenceRead__last;
extern const int COLOR_kernel__Object___33d_61d;
extern const int COLOR_abstract_collection__Sequence__pop;
extern const int COLOR_abstract_collection__Sequence__push;
extern const int COLOR_abstract_collection__Iterator__next;
extern const int COLOR_string__Collection__join;
val* file__String__simplify_path(val* self);
extern const int COLOR_array__Array__with_capacity;
extern const int COLOR_abstract_collection__SimpleCollection__add;
val* file__String__join_path(val* self, val* p0);
val* NEW_string__Buffer(const struct type* type);
extern const struct type type_string__Buffer;
extern const int COLOR_string__Buffer__init;
void CHECK_NEW_string__Buffer(val*);
extern const int COLOR_abstract_collection__Sequence__append;
short int file__NativeString__file_mkdir(char* self);
void file__String__mkdir(val* self);
void file__NativeString__file_chdir(char* self);
void file__String__chdir(val* self);
extern const int COLOR_array__AbstractArrayRead__last_index_of;
val* file__String__file_extension(val* self);
val* file__String__files(val* self);
long file__FileStat__mode(void* self);
long file__FileStat__atime(void* self);
long file__FileStat__ctime(void* self);
long file__FileStat__mtime(void* self);
long file__FileStat__size(void* self);
short int file__FileStat__is_reg(void* self);
short int file__FileStat__is_dir(void* self);
short int file__FileStat__is_chr(void* self);
short int file__FileStat__is_blk(void* self);
short int file__FileStat__is_fifo(void* self);
short int file__FileStat__is_lnk(void* self);
short int file__FileStat__is_sock(void* self);
long file__NativeFile__io_read(void* self, char* p0, long p1);
long file__NativeFile__io_write(void* self, char* p0, long p1);
long file__NativeFile__io_close(void* self);
void* file__NativeFile__file_stat(void* self);
val* NEW_file__Stdin(const struct type* type);
extern const struct type type_file__Stdin;
extern const int COLOR_file__Stdin__init;
void CHECK_NEW_file__Stdin(val*);
val* file__Object__stdin(val* self);
val* NEW_file__Stdout(const struct type* type);
extern const struct type type_file__Stdout;
extern const int COLOR_file__Stdout__init;
void CHECK_NEW_file__Stdout(val*);
val* file__Object__stdout(val* self);
val* NEW_file__Stderr(const struct type* type);
extern const struct type type_file__Stderr;
extern const int COLOR_file__Stderr__init;
void CHECK_NEW_file__Stderr(val*);
val* file__Object__stderr(val* self);
