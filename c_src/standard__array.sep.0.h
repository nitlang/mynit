#include "nit.common.h"
#define COLOR_standard__array__AbstractArrayRead___length 0
#define COLOR_standard__abstract_collection__Collection__length 23
extern const struct type type_standard__Int;
extern const char FILE_standard__kernel[];
#define COLOR_standard__abstract_collection__SequenceRead___91d_93d 31
#define COLOR_standard__kernel__Object___61d_61d 4
long standard___standard__AbstractArrayRead___standard__abstract_collection__SequenceRead__index_of_from(val* self, val* p0, long p1);
long standard___standard__AbstractArrayRead___standard__abstract_collection__SequenceRead__last_index_of_from(val* self, val* p0, long p1);
val* NEW_standard__Array(const struct type* type);
#define COLOR_standard__Array__standard__AbstractArrayRead___35dE 10
void standard___standard__Array___with_capacity(val* self, long p0);
void standard___standard__Array___standard__abstract_collection__SimpleCollection__add(val* self, val* p0);
#define COLOR_standard__AbstractArray__standard__AbstractArrayRead___35dE 11
extern const char FILE_standard__array[];
#define COLOR_standard__abstract_collection__Sequence___91d_93d_61d 47
#define COLOR_standard__array__AbstractArrayRead___free_iterator 1
val* NEW_standard__array__ArrayIterator(const struct type* type);
#define COLOR_standard__array__ArrayIterator__standard__AbstractArrayRead___35dE 12
#define COLOR_standard__array__ArrayIterator__array_61d 23
#define COLOR_standard__kernel__Object__init 0
#define COLOR_standard__array__ArrayIterator___index 0
#define COLOR_standard__AbstractArray___35dE 5
#define COLOR_standard__abstract_collection__SimpleCollection__add 45
#define COLOR_standard__abstract_collection__Collection__is_empty 24
val* standard___standard__SequenceRead___last(val* self);
val* standard___standard__SequenceRead___Collection__first(val* self);
#define COLOR_standard__array__AbstractArray__enlarge 57
void standard___standard__AbstractArrayRead___copy_to(val* self, long p0, long p1, val* p2, long p3);
#define COLOR_standard__Collection__standard__AbstractArray___35dE 6
#define COLOR_standard__abstract_collection__Collection__iterator 25
#define COLOR_standard__abstract_collection__Iterator__is_ok 16
#define COLOR_standard__abstract_collection__Iterator__item 17
#define COLOR_standard__abstract_collection__Iterator__next 18
#define COLOR_standard__abstract_collection__Iterator__finish 19
long standard___standard__AbstractArrayRead___standard__abstract_collection__SequenceRead__index_of(val* self, val* p0);
void standard___standard__AbstractArray___standard__abstract_collection__Sequence__remove_at(val* self, long p0);
#define COLOR_standard__array__Array___items 2
#define COLOR_standard__Array___35dE 0
#define COLOR_standard__array__Array___capacity 3
void standard___standard__Array___AbstractArray__enlarge(val* self, long p0);
#define COLOR_standard__NativeArray___35dE 0
#define COLOR_standard__Collection__standard__Array___35dE 2
#define COLOR_standard__Array__standard__Array___35dE 3
val* NEW_standard__NativeArray(int length, const struct type* type);
#define COLOR_standard__NativeArray__standard__Array___35dE 4
#define COLOR_standard__NativeArray__standard__NativeArray___35dE 1
#define COLOR_standard___standard__Array___standard__kernel__Object__init 61
void standard___standard__Array___standard__kernel__Object__init(val* self);
void standard___standard__Array___standard__abstract_collection__Sequence___91d_93d_61d(val* self, long p0, val* p1);
extern const struct type type_standard__Array__nullable__standard__Object;
#define COLOR_standard___standard__Array___standard__kernel__Object___61d_61d 62
#define COLOR_standard__kernel__Object___33d_61d 1
#define COLOR_standard__array__ArrayIterator___array 1
#define COLOR_standard__AbstractArrayRead__standard__array__ArrayIterator___35dE 1
#define COLOR_standard__array___standard__array__ArrayIterator___standard__kernel__Object__init 24
#define COLOR_standard__array__ArraySet___array 0
short int standard___standard__AbstractArrayRead___standard__abstract_collection__Collection__has(val* self, val* p0);
#define COLOR_standard__ArraySet___35dE 0
short int standard___standard__AbstractArrayRead___standard__abstract_collection__Collection__is_empty(val* self);
void standard___standard__ArraySet___remove_at(val* self, long p0);
void standard___standard__AbstractArray___standard__abstract_collection__RemovableCollection__clear(val* self);
val* NEW_standard__array__ArraySetIterator(const struct type* type);
#define COLOR_standard__array__ArraySetIterator__standard__ArraySet___35dE 2
val* standard___standard__AbstractArrayRead___standard__abstract_collection__Collection__iterator(val* self);
#define COLOR_standard__array__ArraySetIterator__iter_61d 22
val* standard___standard__AbstractArray___standard__abstract_collection__Sequence__pop(val* self);
#define COLOR_standard__Array__standard__ArraySet___35dE 3
#define COLOR_standard__array__ArraySetIterator___iter 0
short int standard__array___standard__array__ArrayIterator___standard__abstract_collection__Iterator__is_ok(val* self);
void standard__array___standard__array__ArrayIterator___standard__abstract_collection__Iterator__next(val* self);
val* standard__array___standard__array__ArrayIterator___standard__abstract_collection__Iterator__item(val* self);
#define COLOR_standard__array__ArrayIterator__standard__array__ArraySetIterator___35dE 1
#define COLOR_standard__array___standard__array__ArraySetIterator___standard__kernel__Object__init 23
#define COLOR_standard__ArrayMap___35dK 1
long standard___standard__ArrayMap___index(val* self, val* p0);
#define COLOR_standard__array__ArrayMap___items 4
val* standard___standard__Array___standard__abstract_collection__SequenceRead___91d_93d(val* self, long p0);
#define COLOR_standard__abstract_collection__Couple___second 1
val* standard___standard__MapRead___provide_default_value(val* self, val* p0);
#define COLOR_standard__ArrayMap___35dE 2
#define COLOR_standard__Couple___35dS 1
extern const char FILE_standard__abstract_collection[];
val* NEW_standard__Couple(const struct type* type);
#define COLOR_standard__Couple__standard__ArrayMap___35dK__standard__ArrayMap___35dE 3
#define COLOR_standard__abstract_collection__Couple__first_61d 18
#define COLOR_standard__abstract_collection__Couple__second_61d 17
void standard___standard__AbstractArray___standard__abstract_collection__Sequence__push(val* self, val* p0);
#define COLOR_standard__array__ArrayMap___keys 0
val* NEW_standard__array__ArrayMapKeys(const struct type* type);
#define COLOR_standard__array__ArrayMapKeys__standard__ArrayMap___35dK__standard__ArrayMap___35dE 4
#define COLOR_standard__array__ArrayMapKeys__map_61d 16
#define COLOR_standard__array__ArrayMap___values 2
val* NEW_standard__array__ArrayMapValues(const struct type* type);
#define COLOR_standard__array__ArrayMapValues__standard__ArrayMap___35dK__standard__ArrayMap___35dE 5
#define COLOR_standard__array__ArrayMapValues__map_61d 16
#define COLOR_standard__array__ArrayMap___last_index 5
#define COLOR_standard__abstract_collection__Couple___first 0
#define COLOR_standard__array__ArrayMapKeys___map 0
#define COLOR_standard__ArrayMap__standard__array__ArrayMapKeys___35dK__standard__array__ArrayMapKeys___35dE 0
#define COLOR_standard__array__ArrayMapKeys___35dK 2
short int standard___standard__ArrayMap___standard__abstract_collection__MapRead__is_empty(val* self);
long standard___standard__ArrayMap___standard__abstract_collection__MapRead__length(val* self);
val* NEW_standard__MapKeysIterator(const struct type* type);
#define COLOR_standard__MapKeysIterator__standard__array__ArrayMapKeys___35dK__standard__array__ArrayMapKeys___35dE 3
val* standard___standard__CoupleMap___MapRead__iterator(val* self);
#define COLOR_standard__abstract_collection__MapKeysIterator__original_iterator_61d 22
void standard___standard__ArrayMap___standard__abstract_collection__Map__clear(val* self);
void standard___standard__ArrayMap___remove_at_index(val* self, long p0);
#define COLOR_standard__array___standard__array__ArrayMapKeys___standard__kernel__Object__init 18
#define COLOR_standard__array__ArrayMapValues___map 0
#define COLOR_standard__ArrayMap__standard__array__ArrayMapValues___35dK__standard__array__ArrayMapValues___35dE 0
val* NEW_standard__MapValuesIterator(const struct type* type);
#define COLOR_standard__MapValuesIterator__standard__array__ArrayMapValues___35dK__standard__array__ArrayMapValues___35dE 2
#define COLOR_standard__abstract_collection__MapValuesIterator__original_iterator_61d 22
void standard__array___standard__array__ArrayIterator___standard__abstract_collection__Iterator__finish(val* self);
#define COLOR_standard__array___standard__array__ArrayMapValues___standard__kernel__Object__init 18
#define COLOR_standard__Array__standard__Iterator___35dE 0
#define COLOR_standard__Array__standard__Collection___35dE 1
void standard___standard__Array___standard__abstract_collection__SimpleCollection__add_all(val* self, val* p0);
