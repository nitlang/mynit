#include "nit.common.h"
extern const int COLOR_separate_compiler__ToolContext___64dopt_separate;
val* separate_compiler__ToolContext__opt_separate(val* self);
void separate_compiler__ToolContext__opt_separate_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_no_inline_intern;
val* separate_compiler__ToolContext__opt_no_inline_intern(val* self);
void separate_compiler__ToolContext__opt_no_inline_intern_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_no_union_attribute;
val* separate_compiler__ToolContext__opt_no_union_attribute(val* self);
void separate_compiler__ToolContext__opt_no_union_attribute_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_no_shortcut_equate;
val* separate_compiler__ToolContext__opt_no_shortcut_equate(val* self);
void separate_compiler__ToolContext__opt_no_shortcut_equate_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_inline_coloring_numbers;
val* separate_compiler__ToolContext__opt_inline_coloring_numbers(val* self);
void separate_compiler__ToolContext__opt_inline_coloring_numbers_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_bm_typing;
val* separate_compiler__ToolContext__opt_bm_typing(val* self);
void separate_compiler__ToolContext__opt_bm_typing_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_phmod_typing;
val* separate_compiler__ToolContext__opt_phmod_typing(val* self);
void separate_compiler__ToolContext__opt_phmod_typing_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_phand_typing;
val* separate_compiler__ToolContext__opt_phand_typing(val* self);
void separate_compiler__ToolContext__opt_phand_typing_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext___64dopt_tables_metrics;
val* separate_compiler__ToolContext__opt_tables_metrics(val* self);
void separate_compiler__ToolContext__opt_tables_metrics_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__ToolContext__init;
extern const int COLOR_toolcontext__ToolContext__option_context;
extern const int COLOR_separate_compiler__ToolContext__opt_separate;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arrayopts__Option;
val* NEW_array__NativeArray(int length, const struct type* type);
extern const struct type type_array__NativeArrayopts__Option;
extern const int COLOR_array__Array__with_native;
void CHECK_NEW_array__Array(val*);
extern const int COLOR_opts__OptionContext__add_option;
extern const int COLOR_separate_compiler__ToolContext__opt_no_inline_intern;
extern const int COLOR_separate_compiler__ToolContext__opt_no_union_attribute;
extern const int COLOR_separate_compiler__ToolContext__opt_no_shortcut_equate;
extern const int COLOR_separate_compiler__ToolContext__opt_inline_coloring_numbers;
extern const int COLOR_separate_compiler__ToolContext__opt_bm_typing;
extern const int COLOR_separate_compiler__ToolContext__opt_phmod_typing;
extern const int COLOR_separate_compiler__ToolContext__opt_phand_typing;
extern const int COLOR_separate_compiler__ToolContext__opt_tables_metrics;
void separate_compiler__ToolContext__init(val* self);
extern const int COLOR_time__Object__get_time;
extern const int COLOR_modelbuilder__ModelBuilder__toolcontext;
val* string__NativeString__to_s_with_length(char* self, long p0);
extern const int COLOR_toolcontext__ToolContext__info;
val* NEW_separate_compiler__SeparateCompiler(const struct type* type);
extern const struct type type_separate_compiler__SeparateCompiler;
extern const int COLOR_separate_compiler__SeparateCompiler__init;
void CHECK_NEW_separate_compiler__SeparateCompiler(val*);
extern const int COLOR_abstract_compiler__AbstractCompiler__compile_header;
extern const int COLOR_model_base__MModule__name;
extern const struct type type_array__Arraykernel__Object;
extern const struct type type_array__NativeArraykernel__Object;
extern const int COLOR_string__Object__to_s;
extern const int COLOR_abstract_compiler__AbstractCompiler__new_file;
extern const int COLOR_separate_compiler__SeparateCompiler__do_property_coloring;
extern const int COLOR_model_base__MModule__in_importation;
extern const int COLOR_poset__POSetElement__greaters;
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
extern const int COLOR_model__MModule__intro_mclasses;
extern const int COLOR_model__MClass__kind;
extern const int COLOR_model__Object__abstract_kind;
extern const int COLOR_kernel__Object___61d_61d;
extern const int COLOR_model__Object__interface_kind;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_class_to_c;
extern const int COLOR_abstract_collection__Iterator__next;
extern const int COLOR_abstract_compiler__AbstractCompiler__compile_main_function;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_module_to_c;
extern const int COLOR_separate_compiler__SeparateCompiler__do_type_coloring;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_type_to_c;
extern const int COLOR_abstract_compiler__AbstractCompiler__display_stats;
extern const int COLOR_abstract_compiler__ModelBuilder__write_and_make;
void separate_compiler__ModelBuilder__run_separate_compiler(val* self, val* p0, val* p1);
extern const int COLOR_separate_compiler__SeparateCompiler___64druntime_type_analysis;
val* separate_compiler__SeparateCompiler__runtime_type_analysis(val* self);
void separate_compiler__SeparateCompiler__runtime_type_analysis_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dundead_types;
val* separate_compiler__SeparateCompiler__undead_types(val* self);
void separate_compiler__SeparateCompiler__undead_types_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dpartial_types;
val* separate_compiler__SeparateCompiler__partial_types(val* self);
void separate_compiler__SeparateCompiler__partial_types_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dlive_unresolved_types;
val* separate_compiler__SeparateCompiler__live_unresolved_types(val* self);
void separate_compiler__SeparateCompiler__live_unresolved_types_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dtype_layout;
val* separate_compiler__SeparateCompiler__type_layout(val* self);
void separate_compiler__SeparateCompiler__type_layout_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dresolution_layout;
val* separate_compiler__SeparateCompiler__resolution_layout(val* self);
void separate_compiler__SeparateCompiler__resolution_layout_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dmethod_layout;
val* separate_compiler__SeparateCompiler__method_layout(val* self);
void separate_compiler__SeparateCompiler__method_layout_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dattr_layout;
val* separate_compiler__SeparateCompiler__attr_layout(val* self);
void separate_compiler__SeparateCompiler__attr_layout_61d(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractCompiler__init;
val* NEW_abstract_compiler__CodeWriter(const struct type* type);
extern const struct type type_abstract_compiler__CodeWriter;
extern const int COLOR_abstract_compiler__CodeWriter__init;
void CHECK_NEW_abstract_compiler__CodeWriter(val*);
extern const int COLOR_abstract_compiler__AbstractCompiler__header_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__runtime_type_analysis_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_box_kinds;
void separate_compiler__SeparateCompiler__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_abstract_compiler__AbstractCompiler__header;
extern const int COLOR_abstract_compiler__CodeWriter__add_decl;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_header_attribute_structs;
extern const int COLOR_abstract_compiler__AbstractCompiler__modelbuilder;
extern const int COLOR_opts__Option__value;
void separate_compiler__SeparateCompiler__compile_header_structs(val* self);
extern const int COLOR_separate_compiler__SeparateCompiler__box_kinds;
extern const int COLOR_abstract_collection__MapRead__iterator;
extern const int COLOR_abstract_collection__MapIterator__is_ok;
extern const int COLOR_abstract_collection__MapIterator__key;
extern const int COLOR_abstract_collection__MapIterator__item;
extern const int COLOR_model__MClass__mclass_type;
extern const int COLOR_abstract_compiler__MType__ctype;
extern const int COLOR_abstract_compiler__MType__ctypename;
extern const int COLOR_abstract_collection__MapIterator__next;
void separate_compiler__SeparateCompiler__compile_header_attribute_structs(val* self);
extern const struct type type_array__Arraystring__String;
extern const int COLOR_array__Array__with_capacity;
extern const int COLOR_abstract_collection__Sequence__push;
extern const int COLOR_abstract_compiler__AbstractCompiler__mainmodule;
extern const int COLOR_model_base__MModule__model;
extern const int COLOR_model__Model__get_mclasses_by_name;
extern const int COLOR_abstract_collection__Collection__length;
extern const int COLOR_string__Collection__join;
extern const int COLOR_file__Object__print;
extern const int COLOR_abstract_collection__Collection__first;
extern const int COLOR_abstract_collection__MapRead__length;
extern const int COLOR_abstract_collection__Map___91d_93d_61d;
void separate_compiler__SeparateCompiler__compile_box_kinds(val* self);
extern const int COLOR_separate_compiler__SeparateCompiler___64dbox_kinds;
val* separate_compiler__SeparateCompiler__box_kinds(val* self);
void separate_compiler__SeparateCompiler__box_kinds_61d(val* self, val* p0);
extern const int COLOR_model__Object__extern_kind;
extern const int COLOR_model__MModule__get_primitive_class;
extern const int COLOR_abstract_collection__MapRead___91d_93d;
long separate_compiler__SeparateCompiler__box_kind_of(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractCompiler__new_visitor;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_color_const;
void separate_compiler__SeparateCompiler__compile_color_consts(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler__color_consts_done;
extern const int COLOR_abstract_collection__Collection__has;
extern const struct type type_model__MProperty;
extern const int COLOR_separate_compiler__MProperty__const_color;
extern const int COLOR_abstract_compiler__AbstractCompiler__provide_declaration;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__add;
extern const struct type type_model__MPropDef;
extern const int COLOR_separate_compiler__MPropDef__const_color;
extern const struct type type_model__MType;
extern const int COLOR_separate_compiler__MType__const_color;
extern const int COLOR_abstract_collection__SimpleCollection__add;
void separate_compiler__SeparateCompiler__compile_color_const(val* self, val* p0, val* p1, long p2);
extern const int COLOR_separate_compiler__SeparateCompiler___64dcolor_consts_done;
val* separate_compiler__SeparateCompiler__color_consts_done(val* self);
void separate_compiler__SeparateCompiler__color_consts_done_61d(val* self, val* p0);
val* NEW_hash_collection__HashSet(const struct type* type);
extern const struct type type_hash_collection__HashSetmodel__MClass;
extern const int COLOR_modelbuilder__ModelBuilder__model;
extern const int COLOR_model__Model__mclasses;
extern const int COLOR_hash_collection__HashSet__from;
void CHECK_NEW_hash_collection__HashSet(val*);
val* NEW_layout_builders__MClassColorer(const struct type* type);
extern const struct type type_layout_builders__MClassColorer;
extern const int COLOR_layout_builders__MClassColorer__init;
void CHECK_NEW_layout_builders__MClassColorer(val*);
extern const int COLOR_layout_builders__TypingLayoutBuilder__build_layout;
val* NEW_layout_builders__MPropertyColorer(const struct type* type);
extern const struct type type_layout_builders__MPropertyColorerlayout_builders__PropertyLayoutElement;
extern const int COLOR_layout_builders__MPropertyColorer__init;
void CHECK_NEW_layout_builders__MPropertyColorer(val*);
extern const struct type type_layout_builders__MPropertyColorermodel__MAttribute;
val* NEW_hash_collection__HashMap(const struct type* type);
extern const struct type type_hash_collection__HashMapmodel__MClassabstract_collection__Setlayout_builders__PropertyLayoutElement;
extern const int COLOR_hash_collection__HashMap__init;
void CHECK_NEW_hash_collection__HashMap(val*);
extern const struct type type_hash_collection__HashMapmodel__MClassabstract_collection__Setmodel__MAttribute;
extern const struct type type_hash_collection__HashSetlayout_builders__PropertyLayoutElement;
extern const int COLOR_hash_collection__HashSet__init;
extern const struct type type_hash_collection__HashSetmodel__MAttribute;
extern const int COLOR_abstract_compiler__MModule__properties;
extern const struct type type_model__MMethod;
extern const struct type type_model__MAttribute;
extern const int COLOR_separate_compiler__SeparateCompiler__runtime_type_analysis;
extern const int COLOR_rapid_type_analysis__RapidTypeAnalysis__live_super_sends;
extern const int COLOR_model__MPropDef__mclassdef;
extern const int COLOR_model__MClassDef__mclass;
extern const int COLOR_model__MClass__in_hierarchy;
extern const int COLOR_poset__POSetElement__smallers;
extern const int COLOR_layout_builders__PropertyLayoutBuilder__build_layout;
extern const int COLOR_separate_compiler__SeparateCompiler__method_layout_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__build_method_tables;
extern const int COLOR_separate_compiler__SeparateCompiler__method_tables_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__method_layout;
extern const int COLOR_layout_builders__Layout__pos;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_color_consts;
extern const int COLOR_model__MModule__mclassdefs;
extern const int COLOR_model__MClassDef__mpropdefs;
extern const int COLOR_typing__MPropDef__has_supercall;
extern const int COLOR_separate_compiler__SeparateCompiler__attr_layout_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__build_attr_tables;
extern const int COLOR_separate_compiler__SeparateCompiler__attr_tables_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__attr_layout;
void separate_compiler__SeparateCompiler__do_property_coloring(val* self);
extern const struct type type_hash_collection__HashMapmodel__MClassarray__Arraynullable_model__MPropDef;
extern const struct type type_array__Arraynullable_model__MPropDef;
extern const int COLOR_array__Array__init;
val* NEW_list__List(const struct type* type);
extern const struct type type_list__Listmodel__MMethodDef;
extern const int COLOR_list__List__init;
void CHECK_NEW_list__List(val*);
extern const struct type type_array__Arraymodel__MClass;
extern const int COLOR_model__MModule__flatten_mclass_hierarchy;
extern const int COLOR_array__Collection__to_a;
extern const int COLOR_model__MModule__linearize_mclasses;
extern const struct type type_kernel__Int;
val* NEW_range__Range(const struct type* type);
extern const struct type type_range__Rangekernel__Int;
extern const int COLOR_range__Range__without_last;
void CHECK_NEW_range__Range(val*);
extern const int COLOR_abstract_collection__Sequence___91d_93d_61d;
extern const int COLOR_model__MProperty__mpropdefs;
extern const int COLOR_model__MClass__mclassdefs;
extern const int COLOR_model__MClass__intro;
extern const int COLOR_model__MClassDef__bound_mtype;
extern const int COLOR_model__MPropDef__lookup_next_definition;
val* separate_compiler__SeparateCompiler__build_method_tables(val* self, val* p0, val* p1);
val* separate_compiler__SeparateCompiler__build_attr_tables(val* self, val* p0);
extern const struct type type_hash_collection__HashSetmodel__MType;
extern const int COLOR_rapid_type_analysis__RapidTypeAnalysis__live_types;
extern const int COLOR_abstract_collection__SimpleCollection__add_all;
extern const int COLOR_rapid_type_analysis__RapidTypeAnalysis__live_cast_types;
extern const int COLOR_separate_compiler__SeparateCompiler__undead_types;
extern const int COLOR_abstract_collection__MapRead__keys;
extern const int COLOR_separate_compiler__SeparateCompiler__retrieve_partial_types;
extern const int COLOR_separate_compiler__SeparateCompiler__partial_types;
val* NEW_layout_builders__MTypeBMizer(const struct type* type);
extern const struct type type_layout_builders__MTypeBMizer;
extern const int COLOR_layout_builders__MTypeBMizer__init;
void CHECK_NEW_layout_builders__MTypeBMizer(val*);
val* NEW_layout_builders__MTypeHasher(const struct type* type);
extern const struct type type_layout_builders__MTypeHasher;
val* NEW_layout_builders__PHModOperator(const struct type* type);
extern const struct type type_layout_builders__PHModOperator;
extern const int COLOR_layout_builders__PHModOperator__init;
void CHECK_NEW_layout_builders__PHModOperator(val*);
extern const int COLOR_layout_builders__MTypeHasher__init;
void CHECK_NEW_layout_builders__MTypeHasher(val*);
val* NEW_layout_builders__PHAndOperator(const struct type* type);
extern const struct type type_layout_builders__PHAndOperator;
extern const int COLOR_layout_builders__PHAndOperator__init;
void CHECK_NEW_layout_builders__PHAndOperator(val*);
val* NEW_layout_builders__MTypeColorer(const struct type* type);
extern const struct type type_layout_builders__MTypeColorer;
extern const int COLOR_layout_builders__MTypeColorer__init;
void CHECK_NEW_layout_builders__MTypeColorer(val*);
extern const int COLOR_separate_compiler__SeparateCompiler__type_layout_61d;
extern const int COLOR_layout_builders__TypingLayoutBuilder__poset;
extern const int COLOR_separate_compiler__SeparateCompiler__build_type_tables;
extern const int COLOR_separate_compiler__SeparateCompiler__type_tables_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_resolution_tables;
val* separate_compiler__SeparateCompiler__do_type_coloring(val* self);
extern const struct type type_hash_collection__HashMapmodel__MTypearray__Arraynullable_model__MType;
extern const int COLOR_separate_compiler__SeparateCompiler__type_layout;
extern const struct type type_array__Arraynullable_model__MType;
extern const int COLOR_poset__POSet___91d_93d;
extern const struct type type_layout_builders__PHLayoutmodel__MTypemodel__MType;
extern const int COLOR_layout_builders__PHLayout__hashes;
val* separate_compiler__SeparateCompiler__build_type_tables(val* self, val* p0);
extern const struct type type_hash_collection__HashMapmodel__MClassTypeabstract_collection__Setmodel__MType;
extern const int COLOR_model__MType__collect_mclassdefs;
extern const int COLOR_separate_compiler__SeparateCompiler__live_unresolved_types;
extern const int COLOR_abstract_collection__MapRead__has_key;
val* NEW_layout_builders__ResolutionBMizer(const struct type* type);
extern const struct type type_layout_builders__ResolutionBMizer;
extern const int COLOR_layout_builders__ResolutionBMizer__init;
void CHECK_NEW_layout_builders__ResolutionBMizer(val*);
val* NEW_layout_builders__ResolutionHasher(const struct type* type);
extern const struct type type_layout_builders__ResolutionHasher;
extern const int COLOR_layout_builders__ResolutionHasher__init;
void CHECK_NEW_layout_builders__ResolutionHasher(val*);
val* NEW_layout_builders__ResolutionColorer(const struct type* type);
extern const struct type type_layout_builders__ResolutionColorer;
extern const int COLOR_layout_builders__ResolutionColorer__init;
void CHECK_NEW_layout_builders__ResolutionColorer(val*);
extern const int COLOR_layout_builders__ResolutionLayoutBuilder__build_layout;
extern const int COLOR_separate_compiler__SeparateCompiler__resolution_layout_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__build_resolution_tables;
extern const int COLOR_separate_compiler__SeparateCompiler__resolution_tables_61d;
extern const int COLOR_abstract_collection__MapRead__values;
extern const struct type type_hash_collection__HashMapmodel__MTypekernel__Int;
extern const int COLOR_separate_compiler__SeparateCompiler__resolution_layout;
void separate_compiler__SeparateCompiler__compile_resolution_tables(val* self, val* p0);
extern const struct type type_hash_collection__HashMapmodel__MClassTypearray__Arraynullable_model__MType;
extern const struct type type_layout_builders__PHLayoutmodel__MClassTypemodel__MType;
val* separate_compiler__SeparateCompiler__build_resolution_tables(val* self, val* p0);
extern const struct type type_model__MGenericType;
extern const int COLOR_model__MClassType__arguments;
extern const int COLOR_model__MType__need_anchor;
extern const struct type type_model__MNullableType;
extern const int COLOR_model__MNullableType__mtype;
extern const struct type type_model__MClassType;
extern const int COLOR_model__MClassType__mclass;
extern const struct type type_model__MVirtualTypeProp;
extern const int COLOR_model__MVirtualTypeProp__mvirtualtype;
extern const int COLOR_model__MVirtualType__lookup_bound;
extern const int COLOR_model__MType__anchor_to;
void separate_compiler__SeparateCompiler__retrieve_partial_types(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractCompiler__mainmodule_61d;
extern const struct type type_model__MMethodDef;
extern const int COLOR_separate_compiler__MMethodDef__separate_runtime_function;
extern const int COLOR_abstract_compiler__AbstractRuntimeFunction__compile_to_c;
extern const int COLOR_separate_compiler__MMethodDef__virtual_runtime_function;
void separate_compiler__SeparateCompiler__compile_module_to_c(val* self, val* p0);
extern const int COLOR_abstract_compiler__MType__c_name;
val* NEW_separate_compiler__SeparateCompilerVisitor(const struct type* type);
extern const struct type type_separate_compiler__SeparateCompilerVisitor;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__init;
void CHECK_NEW_separate_compiler__SeparateCompilerVisitor(val*);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__add_decl;
extern const int COLOR_layout_builders__Layout__ids;
extern const int COLOR_layout_builders__PHLayout__masks;
extern const int COLOR_separate_compiler__SeparateCompiler__compile_type_resolution_table;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__require_declaration;
extern const int COLOR_separate_compiler__SeparateCompiler__type_tables;
void separate_compiler__SeparateCompiler__compile_type_to_c(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler__resolution_tables;
extern const int COLOR_model__MType__resolve_for;
short int separate_compiler__SeparateCompiler__compile_type_resolution_table(val* self, val* p0);
extern const int COLOR_abstract_compiler__MClass__c_name;
extern const int COLOR_separate_compiler__SeparateCompiler__method_tables;
extern const int COLOR_separate_compiler__SeparateCompiler__attr_tables;
extern const int COLOR_rapid_type_analysis__RapidTypeAnalysis__live_classes;
extern const int COLOR_model__MClass__name;
extern const int COLOR_kernel__Object___33d_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__box_kind_of;
extern const int COLOR_abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_abstract_compiler__AbstractRuntimeFunction__c_name;
extern const int COLOR_model__MClass__intro_mmodule;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__new_named_var;
extern const int COLOR_abstract_compiler__RuntimeVariable__is_exact_61d;
extern const int COLOR_separate_compiler__SeparateCompiler__hardening_live_type;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__add_abort;
extern const int COLOR_abstract_compiler__AbstractCompiler__generate_init_attr;
extern const int COLOR_abstract_compiler__AbstractCompiler__generate_check_init_instance;
void separate_compiler__SeparateCompiler__compile_class_to_c(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractCompiler_VTVISITOR;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__compiler;
extern const int COLOR_abstract_compiler__ToolContext__opt_hardening;
void separate_compiler__SeparateCompiler__hardening_live_type(val* self, val* p0, val* p1);
extern const int COLOR_abstract_compiler__ToolContext__opt_no_check_initialization;
val* NEW_abstract_compiler__RuntimeVariable(const struct type* type);
extern const struct type type_abstract_compiler__RuntimeVariable;
extern const int COLOR_abstract_compiler__RuntimeVariable__init;
void CHECK_NEW_abstract_compiler__RuntimeVariable(val*);
extern const int COLOR_abstract_compiler__AbstractCompiler__generate_check_attr;
void separate_compiler__SeparateCompiler__generate_check_init_instance(val* self, val* p0);
val* separate_compiler__SeparateCompiler__new_visitor(val* self);
extern const int COLOR_separate_compiler__SeparateCompiler___64dtype_tables;
val* separate_compiler__SeparateCompiler__type_tables(val* self);
void separate_compiler__SeparateCompiler__type_tables_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dresolution_tables;
val* separate_compiler__SeparateCompiler__resolution_tables(val* self);
void separate_compiler__SeparateCompiler__resolution_tables_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dmethod_tables;
val* separate_compiler__SeparateCompiler__method_tables(val* self);
void separate_compiler__SeparateCompiler__method_tables_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler___64dattr_tables;
val* separate_compiler__SeparateCompiler__attr_tables(val* self);
void separate_compiler__SeparateCompiler__attr_tables_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompiler__display_stats;
extern const int COLOR_separate_compiler__SeparateCompiler__display_sizes;
void separate_compiler__SeparateCompiler__display_stats(val* self);
void separate_compiler__SeparateCompiler__display_sizes(val* self);
void separate_compiler__SeparateCompiler__compile_nitni_structs(val* self);
extern const int COLOR_modelbuilder__AModule__mmodule;
extern const int COLOR_separate_compiler__SeparateCompiler__finalize_ffi_for_module;
void separate_compiler__SeparateCompiler__finalize_ffi_for_module(val* self, val* p0);
extern const int COLOR_model__MMethodDef__msignature;
extern const int COLOR_model__MClassDef__mmodule;
extern const int COLOR_abstract_compiler__RuntimeVariable__mtype;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__autobox;
extern const int COLOR_abstract_collection__Sequence__first_61d;
extern const int COLOR_model__MSignature__arity;
extern const int COLOR_model__MSignature__mparameters;
extern const int COLOR_model__MParameter__mtype;
extern const int COLOR_model__MSignature__vararg_rank;
void separate_compiler__SeparateCompilerVisitor__adapt_signature(val* self, val* p0, val* p1);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__new_expr;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__new_var;
extern const int COLOR_nitni_base__MType__cname_blind;
val* separate_compiler__SeparateCompilerVisitor__autobox(val* self, val* p0, val* p1);
val* separate_compiler__SeparateCompilerVisitor__type_info(val* self, val* p0);
extern const int COLOR_model__MProperty__intro;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__varargize;
extern const int COLOR_abstract_compiler__RuntimeVariable__mcasttype;
extern const int COLOR_abstract_compiler__AbstractCompiler__realmainmodule;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__monomorphic_send;
extern const int COLOR_separate_compiler__SeparateCompilerVisitor__table_send;
val* separate_compiler__SeparateCompilerVisitor__send(val* self, val* p0, val* p1);
extern const int COLOR_model__MSignature__return_mtype;
extern const int COLOR_model__MMethod__is_new;
val* NEW_string__Buffer(const struct type* type);
extern const struct type type_string__Buffer;
extern const int COLOR_string__Buffer__init;
void CHECK_NEW_string__Buffer(val*);
extern const int COLOR_abstract_collection__Sequence__append;
extern const int COLOR_abstract_compiler__ToolContext__opt_no_check_other;
extern const int COLOR_model__MProperty__name;
extern const struct type type_model__MNullType;
extern const int COLOR_string__Object__inspect;
val* separate_compiler__SeparateCompilerVisitor__table_send(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MPropDef__mproperty;
extern const int COLOR_modelize_property__ModelBuilder__mpropdef2npropdef;
extern const struct type type_parser_nodes__AInternMethPropdef;
val* NEW_abstract_compiler__Frame(const struct type* type);
extern const struct type type_abstract_compiler__Frame;
extern const int COLOR_abstract_compiler__Frame__init;
void CHECK_NEW_abstract_compiler__Frame(val*);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__get_name;
extern const int COLOR_abstract_compiler__Frame__returnlabel_61d;
extern const int COLOR_abstract_compiler__Frame__returnvar_61d;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__frame;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__frame_61d;
extern const int COLOR_abstract_compiler__MMethodDef__compile_inside_to_c;
extern const int COLOR_abstract_compiler__Frame__returnlabel;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__adapt_signature;
extern const int COLOR_abstract_compiler__MPropDef__c_name;
val* separate_compiler__SeparateCompilerVisitor__call(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__monomorphic_super_send;
val* separate_compiler__SeparateCompilerVisitor__supercall(val* self, val* p0, val* p1, val* p2);
extern const struct type type_array__Arrayabstract_compiler__RuntimeVariable;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__array_instance;
val* separate_compiler__SeparateCompilerVisitor__vararg_instance(val* self, val* p0, val* p1, val* p2, val* p3);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__check_recv_notnull;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__bool_type;
extern const int COLOR_model__MAttributeDef__static_mtype;
val* separate_compiler__SeparateCompilerVisitor__isset_attribute(val* self, val* p0, val* p1);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__object_type;
extern const int COLOR_model__MType__as_nullable;
extern const int COLOR_abstract_compiler__RuntimeVariable__mcasttype_61d;
val* separate_compiler__SeparateCompilerVisitor__read_attribute(val* self, val* p0, val* p1);
void separate_compiler__SeparateCompilerVisitor__write_attribute(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_abstract_compiler__Frame__mpropdef;
extern const int COLOR_separate_compiler__SeparateCompilerVisitor__link_unresolved_type;
extern const int COLOR_abstract_compiler__Frame__arguments;
extern const int COLOR_separate_compiler__SeparateCompilerVisitor__type_info;
val* separate_compiler__SeparateCompilerVisitor__init_instance(val* self, val* p0);
void separate_compiler__SeparateCompilerVisitor__check_init_instance(val* self, val* p0, val* p1);
extern const int COLOR_separate_compiler__SeparateCompilerVisitor__maybe_null;
extern const int COLOR_model__MType__is_subtype;
extern const int COLOR_abstract_compiler__ToolContext__opt_typing_test_metrics;
extern const int COLOR_abstract_compiler__AbstractCompiler__count_type_test_skipped;
extern const int COLOR_abstract_compiler__AbstractCompiler__count_type_test_unresolved;
extern const int COLOR_abstract_compiler__AbstractCompiler__count_type_test_resolved;
val* separate_compiler__SeparateCompilerVisitor__type_test(val* self, val* p0, val* p1, val* p2);
val* separate_compiler__SeparateCompilerVisitor__is_same_type_test(val* self, val* p0, val* p1);
val* separate_compiler__SeparateCompilerVisitor__class_name_string(val* self, val* p0);
extern const int COLOR_separate_compiler__SeparateCompilerVisitor__can_be_primitive;
val* separate_compiler__SeparateCompilerVisitor__equal_test(val* self, val* p0, val* p1);
short int separate_compiler__SeparateCompilerVisitor__can_be_primitive(val* self, val* p0);
short int separate_compiler__SeparateCompilerVisitor__maybe_null(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__get_class;
extern const struct type type_array__Arraymodel__MType;
extern const struct type type_array__NativeArraymodel__MType;
extern const int COLOR_model__MClass__get_mtype;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__init_instance;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__int_instance;
extern const int COLOR_separate_compiler__SeparateCompilerVisitor__native_array_instance;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__get_property;
extern const struct type type_array__NativeArrayabstract_compiler__RuntimeVariable;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__send;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__check_init_instance;
val* separate_compiler__SeparateCompilerVisitor__array_instance(val* self, val* p0, val* p1);
val* separate_compiler__SeparateCompilerVisitor__native_array_instance(val* self, val* p0, val* p1);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__ret;
void separate_compiler__SeparateCompilerVisitor__native_array_def(val* self, val* p0, val* p1, val* p2);
extern const struct type type_model__MParameterType;
void separate_compiler__SeparateCompilerVisitor__calloc_array(val* self, val* p0, val* p1);
void separate_compiler__SeparateCompilerVisitor__link_unresolved_type(val* self, val* p0, val* p1);
extern const int COLOR_separate_compiler__MMethodDef__separate_runtime_function_cache;
val* NEW_separate_compiler__SeparateRuntimeFunction(const struct type* type);
extern const struct type type_separate_compiler__SeparateRuntimeFunction;
extern const int COLOR_abstract_compiler__AbstractRuntimeFunction__init;
void CHECK_NEW_separate_compiler__SeparateRuntimeFunction(val*);
extern const int COLOR_separate_compiler__MMethodDef__separate_runtime_function_cache_61d;
val* separate_compiler__MMethodDef__separate_runtime_function(val* self);
extern const int COLOR_separate_compiler__MMethodDef___64dseparate_runtime_function_cache;
val* separate_compiler__MMethodDef__separate_runtime_function_cache(val* self);
void separate_compiler__MMethodDef__separate_runtime_function_cache_61d(val* self, val* p0);
extern const int COLOR_separate_compiler__MMethodDef__virtual_runtime_function_cache;
val* NEW_separate_compiler__VirtualRuntimeFunction(const struct type* type);
extern const struct type type_separate_compiler__VirtualRuntimeFunction;
void CHECK_NEW_separate_compiler__VirtualRuntimeFunction(val*);
extern const int COLOR_separate_compiler__MMethodDef__virtual_runtime_function_cache_61d;
val* separate_compiler__MMethodDef__virtual_runtime_function(val* self);
extern const int COLOR_separate_compiler__MMethodDef___64dvirtual_runtime_function_cache;
val* separate_compiler__MMethodDef__virtual_runtime_function_cache(val* self);
void separate_compiler__MMethodDef__virtual_runtime_function_cache_61d(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractRuntimeFunction__mmethoddef;
val* separate_compiler__SeparateRuntimeFunction__build_c_name(val* self);
val* separate_compiler__SeparateRuntimeFunction__to_s(val* self);
extern const int COLOR_abstract_compiler__AbstractRuntimeFunction_VTCOMPILER;
extern const int COLOR_abstract_compiler__Frame__returnvar;
void separate_compiler__SeparateRuntimeFunction__compile_to_c(val* self, val* p0);
val* separate_compiler__VirtualRuntimeFunction__build_c_name(val* self);
val* separate_compiler__VirtualRuntimeFunction__to_s(val* self);
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__call;
extern const int COLOR_abstract_compiler__AbstractCompilerVisitor__assign;
void separate_compiler__VirtualRuntimeFunction__compile_to_c(val* self, val* p0);
extern const int COLOR_abstract_compiler__AbstractRuntimeFunction_VTVISITOR;
val* separate_compiler__VirtualRuntimeFunction__call(val* self, val* p0, val* p1);
val* separate_compiler__MType__const_color(val* self);
extern const int COLOR_abstract_compiler__MProperty__c_name;
val* separate_compiler__MProperty__const_color(val* self);
val* separate_compiler__MPropDef__const_color(val* self);
