#include "nit.common.h"
extern const int COLOR_layout_builders__Layout___64dids;
val* layout_builders__Layout__ids(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__Layout_FT0kernel__Int;
void layout_builders__Layout__ids_61d(val* self, val* p0);
extern const int COLOR_layout_builders__Layout___64dpos;
val* layout_builders__Layout__pos(val* self);
void layout_builders__Layout__pos_61d(val* self, val* p0);
void layout_builders__Layout__init(val* self);
extern const int COLOR_layout_builders__PHLayout___64dmasks;
val* layout_builders__PHLayout__masks(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__PHLayout_FT0kernel__Int;
void layout_builders__PHLayout__masks_61d(val* self, val* p0);
extern const int COLOR_layout_builders__PHLayout___64dhashes;
val* layout_builders__PHLayout__hashes(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__PHLayout_FT0abstract_collection__Maplayout_builders__PHLayout_FT1kernel__Int;
void layout_builders__PHLayout__hashes_61d(val* self, val* p0);
extern const int COLOR_layout_builders__Layout__init;
void layout_builders__PHLayout__init(val* self);
extern const int COLOR_abstract_collection__Setlayout_builders__TypingLayoutBuilder_FT0;
val* layout_builders__TypingLayoutBuilder__build_layout(val* self, val* p0);
val* layout_builders__TypingLayoutBuilder__poset(val* self);
extern const int COLOR_abstract_collection__Mapmodel__MClassabstract_collection__Setlayout_builders__PropertyLayoutBuilder_FT0;
val* layout_builders__PropertyLayoutBuilder__build_layout(val* self, val* p0);
val* layout_builders__ResolutionLayoutBuilder__build_layout(val* self, val* p0);
extern const int COLOR_layout_builders__POSetBuilder___64dmmodule;
val* layout_builders__POSetBuilder__mmodule(val* self);
void layout_builders__POSetBuilder__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__POSetBuilder__mmodule_61d;
void layout_builders__POSetBuilder__init(val* self, val* p0);
extern const int COLOR_abstract_collection__Setlayout_builders__POSetBuilder_FT0;
val* layout_builders__POSetBuilder__build_poset(val* self, val* p0);
val* NEW_poset__POSet(const struct type* type);
extern const struct type type_poset__POSetmodel__MType;
extern const int COLOR_poset__POSet__init;
void CHECK_NEW_poset__POSet(val*);
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
extern const int COLOR_poset__POSet__add_node;
extern const int COLOR_kernel__Object___61d_61d;
extern const int COLOR_layout_builders__POSetBuilder__mmodule;
extern const int COLOR_model__MType__is_subtype;
extern const int COLOR_poset__POSet__add_edge;
extern const int COLOR_abstract_collection__Iterator__next;
val* layout_builders__MTypePOSetBuilder__build_poset(val* self, val* p0);
extern const int COLOR_model__MModule__flatten_mclass_hierarchy;
val* layout_builders__MClassPOSetBuilder__build_poset(val* self, val* p0);
extern const int COLOR_layout_builders__TypingBMizer___64dmmodule;
val* layout_builders__TypingBMizer__mmodule(val* self);
void layout_builders__TypingBMizer__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingBMizer___64dposet_builder;
val* layout_builders__TypingBMizer__poset_builder(val* self);
extern const int COLOR_layout_builders__POSetBuilderlayout_builders__TypingBMizer_FT0;
void layout_builders__TypingBMizer__poset_builder_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingBMizer___64dposet_cache;
val* layout_builders__TypingBMizer__poset_cache(val* self);
extern const int COLOR_poset__POSetlayout_builders__TypingBMizer_FT0;
void layout_builders__TypingBMizer__poset_cache_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingBMizer__mmodule_61d;
extern const int COLOR_layout_builders__TypingBMizer__poset_builder_61d;
void layout_builders__TypingBMizer__init(val* self, val* p0, val* p1);
extern const int COLOR_layout_builders__TypingBMizer__poset_cache;
val* layout_builders__TypingBMizer__poset(val* self);
extern const int COLOR_abstract_collection__Setlayout_builders__TypingBMizer_FT0;
val* NEW_layout_builders__Layout(const struct type* type);
extern const int COLOR_layout_builders__Layoutlayout_builders__TypingBMizer_FT0;
void CHECK_NEW_layout_builders__Layout(val*);
val* NEW_hash_collection__HashMap(const struct type* type);
extern const int COLOR_hash_collection__HashMaplayout_builders__TypingBMizer_FT0kernel__Int;
extern const int COLOR_hash_collection__HashMap__init;
void CHECK_NEW_hash_collection__HashMap(val*);
extern const int COLOR_layout_builders__TypingBMizer__poset_builder;
extern const int COLOR_layout_builders__POSetBuilder__build_poset;
extern const int COLOR_layout_builders__TypingBMizer__poset_cache_61d;
extern const int COLOR_layout_builders__TypingLayoutBuilder__poset;
extern const int COLOR_array__Collection__to_a;
extern const int COLOR_sorter__AbstractSorter__sort;
extern const int COLOR_abstract_collection__MapRead__length;
extern const int COLOR_abstract_collection__Map___91d_93d_61d;
extern const int COLOR_layout_builders__Layout__ids_61d;
extern const int COLOR_layout_builders__Layout__pos_61d;
val* layout_builders__TypingBMizer__build_layout(val* self, val* p0);
val* NEW_layout_builders__MTypePOSetBuilder(const struct type* type);
extern const struct type type_layout_builders__MTypePOSetBuilder;
extern const int COLOR_layout_builders__POSetBuilder__init;
void CHECK_NEW_layout_builders__MTypePOSetBuilder(val*);
extern const int COLOR_layout_builders__TypingBMizer__init;
void layout_builders__MTypeBMizer__init(val* self, val* p0);
val* NEW_layout_builders__MClassPOSetBuilder(const struct type* type);
extern const struct type type_layout_builders__MClassPOSetBuilder;
void CHECK_NEW_layout_builders__MClassPOSetBuilder(val*);
void layout_builders__MClassBMizer__init(val* self, val* p0);
void layout_builders__ResolutionBMizer__init(val* self);
extern const struct type type_layout_builders__Layoutmodel__MType;
extern const struct type type_hash_collection__HashMapmodel__MTypekernel__Int;
extern const int COLOR_abstract_collection__MapRead__iterator;
extern const int COLOR_abstract_collection__MapIterator__is_ok;
extern const int COLOR_abstract_collection__MapIterator__key;
extern const int COLOR_abstract_collection__MapIterator__item;
extern const int COLOR_abstract_collection__MapRead__has_key;
extern const int COLOR_abstract_collection__MapIterator__next;
val* layout_builders__ResolutionBMizer__build_layout(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyBMizer___64dmmodule;
val* layout_builders__MPropertyBMizer__mmodule(val* self);
void layout_builders__MPropertyBMizer__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyBMizer__mmodule_61d;
void layout_builders__MPropertyBMizer__init(val* self, val* p0);
extern const int COLOR_layout_builders__Layoutlayout_builders__MPropertyBMizer_FT0;
extern const int COLOR_hash_collection__HashMaplayout_builders__MPropertyBMizer_FT0kernel__Int;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arraymodel__MClass;
extern const int COLOR_array__Array__init;
void CHECK_NEW_array__Array(val*);
extern const int COLOR_abstract_collection__MapRead__keys;
extern const int COLOR_abstract_collection__SimpleCollection__add_all;
extern const int COLOR_layout_builders__MPropertyBMizer__mmodule;
extern const int COLOR_model__MModule__linearize_mclasses;
extern const int COLOR_abstract_collection__MapRead___91d_93d;
val* layout_builders__MPropertyBMizer__build_layout(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dcore;
val* layout_builders__TypingColorer__core(val* self);
extern const int COLOR_abstract_collection__Setlayout_builders__TypingColorer_FT0;
void layout_builders__TypingColorer__core_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dcrown;
val* layout_builders__TypingColorer__crown(val* self);
void layout_builders__TypingColorer__crown_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dborder;
val* layout_builders__TypingColorer__border(val* self);
void layout_builders__TypingColorer__border_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dcoloration_result;
val* layout_builders__TypingColorer__coloration_result(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__TypingColorer_FT0kernel__Int;
void layout_builders__TypingColorer__coloration_result_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dmmodule;
val* layout_builders__TypingColorer__mmodule(val* self);
void layout_builders__TypingColorer__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dposet_builder;
val* layout_builders__TypingColorer__poset_builder(val* self);
extern const int COLOR_layout_builders__POSetBuilderlayout_builders__TypingColorer_FT0;
void layout_builders__TypingColorer__poset_builder_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dposet_cache;
val* layout_builders__TypingColorer__poset_cache(val* self);
extern const int COLOR_poset__POSetlayout_builders__TypingColorer_FT0;
void layout_builders__TypingColorer__poset_cache_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer__mmodule_61d;
extern const int COLOR_layout_builders__TypingColorer__poset_builder_61d;
void layout_builders__TypingColorer__init(val* self, val* p0, val* p1);
extern const int COLOR_layout_builders__TypingColorer__poset_cache;
val* layout_builders__TypingColorer__poset(val* self);
extern const int COLOR_layout_builders__TypingColorer__poset_builder;
extern const int COLOR_layout_builders__TypingColorer__poset_cache_61d;
extern const int COLOR_layout_builders__Layoutlayout_builders__TypingColorer_FT0;
extern const int COLOR_layout_builders__TypingColorer__compute_ids;
extern const int COLOR_layout_builders__TypingColorer__colorize;
val* layout_builders__TypingColorer__build_layout(val* self, val* p0);
extern const int COLOR_hash_collection__HashMaplayout_builders__TypingColorer_FT0kernel__Int;
extern const int COLOR_layout_builders__TypingColorer__reverse_linearize;
val* layout_builders__TypingColorer__compute_ids(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer__tag_elements;
extern const int COLOR_layout_builders__TypingColorer__build_conflicts_graph;
extern const int COLOR_layout_builders__TypingColorer__core;
extern const int COLOR_layout_builders__TypingColorer__colorize_elements;
extern const int COLOR_layout_builders__TypingColorer__border;
extern const int COLOR_layout_builders__TypingColorer__crown;
extern const int COLOR_layout_builders__TypingColorer__coloration_result;
val* layout_builders__TypingColorer__colorize(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer__is_color_free;
void layout_builders__TypingColorer__colorize_elements(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer_FT0;
extern const int COLOR_layout_builders__TypingColorer__conflicts_graph;
extern const struct class class_kernel__Int;
extern const int COLOR_poset__POSet___91d_93d;
extern const int COLOR_poset__POSetElement__greaters;
short int layout_builders__TypingColorer__is_color_free(val* self, val* p0, val* p1, long p2);
extern const int COLOR_poset__POSetElement__smallers;
extern const int COLOR_poset__POSetElement__direct_greaters;
extern const int COLOR_abstract_collection__Collection__length;
extern const struct type type_kernel__Int;
extern const int COLOR_abstract_collection__SimpleCollection__add;
void layout_builders__TypingColorer__tag_elements(val* self, val* p0);
extern const int COLOR_hash_collection__HashMaplayout_builders__TypingColorer_FT0hash_collection__HashSetlayout_builders__TypingColorer_FT0;
extern const int COLOR_layout_builders__TypingColorer__conflicts_graph_61d;
extern const int COLOR_layout_builders__TypingColorer__linear_extension;
extern const int COLOR_abstract_compiler__Array___45d;
val* NEW_hash_collection__HashSet(const struct type* type);
extern const int COLOR_hash_collection__HashSetlayout_builders__TypingColorer_FT0;
extern const int COLOR_hash_collection__HashSet__init;
void CHECK_NEW_hash_collection__HashSet(val*);
void layout_builders__TypingColorer__build_conflicts_graph(val* self);
extern const int COLOR_layout_builders__TypingColorer___64dconflicts_graph;
val* layout_builders__TypingColorer__conflicts_graph(val* self);
extern const int COLOR_hash_collection__HashMaplayout_builders__TypingColorer_FT0abstract_collection__Setlayout_builders__TypingColorer_FT0;
void layout_builders__TypingColorer__conflicts_graph_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer___64dlinear_extensions_cache;
val* layout_builders__TypingColorer__linear_extensions_cache(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__TypingColorer_FT0array__Arraylayout_builders__TypingColorer_FT0;
void layout_builders__TypingColorer__linear_extensions_cache_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer__linear_extensions_cache;
extern const int COLOR_layout_builders__TypingColorer__linearize;
val* layout_builders__TypingColorer__linear_extension(val* self, val* p0);
extern const int COLOR_array__Arraylayout_builders__TypingColorer_FT0;
val* layout_builders__TypingColorer__reverse_linearize(val* self, val* p0);
extern const int COLOR_array__AbstractArrayRead__reversed;
val* layout_builders__TypingColorer__linearize(val* self, val* p0);
extern const int COLOR_layout_builders__TypingColorer__init;
void layout_builders__MTypeColorer__init(val* self, val* p0);
void layout_builders__MClassColorer__init(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyColorer___64dmmodule;
val* layout_builders__MPropertyColorer__mmodule(val* self);
void layout_builders__MPropertyColorer__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyColorer___64dclass_colorer;
val* layout_builders__MPropertyColorer__class_colorer(val* self);
void layout_builders__MPropertyColorer__class_colorer_61d(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyColorer___64dcoloration_result;
val* layout_builders__MPropertyColorer__coloration_result(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__MPropertyColorer_FT0kernel__Int;
void layout_builders__MPropertyColorer__coloration_result_61d(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyColorer__mmodule_61d;
extern const int COLOR_layout_builders__MPropertyColorer__class_colorer_61d;
void layout_builders__MPropertyColorer__init(val* self, val* p0, val* p1);
extern const int COLOR_abstract_collection__Mapmodel__MClassabstract_collection__Setlayout_builders__MPropertyColorer_FT0;
extern const int COLOR_layout_builders__Layoutlayout_builders__MPropertyColorer_FT0;
extern const int COLOR_layout_builders__MPropertyColorer__colorize;
val* layout_builders__MPropertyColorer__build_layout(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyColorer__colorize_core;
extern const int COLOR_layout_builders__MPropertyColorer__colorize_crown;
extern const int COLOR_layout_builders__MPropertyColorer__coloration_result;
val* layout_builders__MPropertyColorer__colorize(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyColorer__class_colorer;
extern const int COLOR_layout_builders__MPropertyColorer__mmodule;
extern const int COLOR_model__MClass__in_hierarchy;
extern const int COLOR_layout_builders__MPropertyColorer__max_color;
extern const int COLOR_layout_builders__MPropertyColorer__colorize_elements;
void layout_builders__MPropertyColorer__colorize_core(val* self, val* p0);
extern const struct type type_hash_collection__HashSetmodel__MClass;
extern const int COLOR_abstract_collection__Collection__has;
void layout_builders__MPropertyColorer__colorize_crown(val* self, val* p0);
extern const int COLOR_abstract_collection__Collectionlayout_builders__MPropertyColorer_FT0;
void layout_builders__MPropertyColorer__colorize_elements(val* self, val* p0, long p1);
long layout_builders__MPropertyColorer__max_color(val* self, long p0, val* p1, val* p2);
extern const int COLOR_layout_builders__ResolutionColorer___64dcoloration_result;
val* layout_builders__ResolutionColorer__coloration_result(val* self);
void layout_builders__ResolutionColorer__coloration_result_61d(val* self, val* p0);
void layout_builders__ResolutionColorer__init(val* self);
extern const int COLOR_layout_builders__ResolutionColorer__build_conflicts_graph;
extern const int COLOR_layout_builders__ResolutionColorer__compute_ids;
extern const int COLOR_layout_builders__ResolutionColorer__colorize_elements;
val* layout_builders__ResolutionColorer__build_layout(val* self, val* p0);
val* layout_builders__ResolutionColorer__compute_ids(val* self, val* p0);
extern const int COLOR_layout_builders__ResolutionColorer__coloration_result;
extern const int COLOR_layout_builders__ResolutionColorer__is_color_free;
val* layout_builders__ResolutionColorer__colorize_elements(val* self, val* p0);
extern const int COLOR_layout_builders__ResolutionColorer__conflicts_graph;
short int layout_builders__ResolutionColorer__is_color_free(val* self, val* p0, long p1);
extern const int COLOR_layout_builders__ResolutionColorer__add_conflict;
void layout_builders__ResolutionColorer__build_conflicts_graph(val* self, val* p0);
extern const int COLOR_layout_builders__ResolutionColorer___64dconflicts_graph;
val* layout_builders__ResolutionColorer__conflicts_graph(val* self);
void layout_builders__ResolutionColorer__conflicts_graph_61d(val* self, val* p0);
extern const struct type type_hash_collection__HashSetmodel__MType;
void layout_builders__ResolutionColorer__add_conflict(val* self, val* p0, val* p1);
extern const int COLOR_layout_builders__PerfectHasher___64doperator;
val* layout_builders__PerfectHasher__operator(val* self);
void layout_builders__PerfectHasher__operator_61d(val* self, val* p0);
void layout_builders__PerfectHasher__init(val* self);
extern const int COLOR_abstract_collection__Maplayout_builders__PerfectHasher_FT0abstract_collection__Setlayout_builders__PerfectHasher_FT1;
extern const int COLOR_abstract_collection__Maplayout_builders__PerfectHasher_FT1kernel__Int;
extern const int COLOR_hash_collection__HashMaplayout_builders__PerfectHasher_FT0kernel__Int;
extern const int COLOR_layout_builders__PerfectHasher__compute_mask;
val* layout_builders__PerfectHasher__compute_masks(val* self, val* p0, val* p1);
extern const int COLOR_abstract_collection__Setlayout_builders__PerfectHasher_FT1;
val* NEW_list__List(const struct type* type);
extern const struct type type_list__Listkernel__Int;
extern const int COLOR_list__List__init;
void CHECK_NEW_list__List(val*);
extern const int COLOR_layout_builders__PerfectHasher__operator;
extern const int COLOR_layout_builders__PHOperator__op;
long layout_builders__PerfectHasher__compute_mask(val* self, val* p0, val* p1);
extern const int COLOR_abstract_collection__Maplayout_builders__PerfectHasher_FT0kernel__Int;
extern const int COLOR_hash_collection__HashMaplayout_builders__PerfectHasher_FT0abstract_collection__Maplayout_builders__PerfectHasher_FT1kernel__Int;
extern const int COLOR_hash_collection__HashMaplayout_builders__PerfectHasher_FT1kernel__Int;
val* layout_builders__PerfectHasher__compute_hashes(val* self, val* p0, val* p1, val* p2);
long layout_builders__PHOperator__op(val* self, long p0, long p1);
void layout_builders__PHOperator__init(val* self);
extern const int COLOR_layout_builders__PHOperator__init;
void layout_builders__PHModOperator__init(val* self);
long layout_builders__PHModOperator__op(val* self, long p0, long p1);
void layout_builders__PHAndOperator__init(val* self);
long math__Int__bin_and(long self, long p0);
long layout_builders__PHAndOperator__op(val* self, long p0, long p1);
extern const int COLOR_layout_builders__TypingHasher___64dmmodule;
val* layout_builders__TypingHasher__mmodule(val* self);
void layout_builders__TypingHasher__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingHasher___64dposet_builder;
val* layout_builders__TypingHasher__poset_builder(val* self);
extern const int COLOR_layout_builders__POSetBuilderlayout_builders__TypingHasher_FT0;
void layout_builders__TypingHasher__poset_builder_61d(val* self, val* p0);
extern const int COLOR_layout_builders__TypingHasher___64dposet_cache;
val* layout_builders__TypingHasher__poset_cache(val* self);
extern const int COLOR_poset__POSetlayout_builders__TypingHasher_FT0;
void layout_builders__TypingHasher__poset_cache_61d(val* self, val* p0);
extern const int COLOR_layout_builders__PerfectHasher__init;
extern const int COLOR_layout_builders__PerfectHasher__operator_61d;
extern const int COLOR_layout_builders__TypingHasher__mmodule_61d;
extern const int COLOR_layout_builders__TypingHasher__poset_builder_61d;
void layout_builders__TypingHasher__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_abstract_collection__Setlayout_builders__TypingHasher_FT0;
extern const int COLOR_layout_builders__TypingHasher__poset_builder;
extern const int COLOR_layout_builders__TypingHasher__poset_cache_61d;
val* NEW_layout_builders__PHLayout(const struct type* type);
extern const int COLOR_layout_builders__PHLayoutlayout_builders__TypingHasher_FT0layout_builders__TypingHasher_FT0;
extern const int COLOR_layout_builders__PHLayout__init;
void CHECK_NEW_layout_builders__PHLayout(val*);
extern const int COLOR_layout_builders__TypingHasher__build_conflicts;
extern const int COLOR_layout_builders__TypingHasher__compute_ids;
extern const int COLOR_layout_builders__Layout__ids;
extern const int COLOR_layout_builders__PerfectHasher__compute_masks;
extern const int COLOR_layout_builders__PHLayout__masks_61d;
extern const int COLOR_layout_builders__PHLayout__masks;
extern const int COLOR_layout_builders__PerfectHasher__compute_hashes;
extern const int COLOR_layout_builders__PHLayout__hashes_61d;
val* layout_builders__TypingHasher__build_layout(val* self, val* p0);
extern const int COLOR_hash_collection__HashMaplayout_builders__TypingHasher_FT0kernel__Int;
val* layout_builders__TypingHasher__compute_ids(val* self);
extern const int COLOR_hash_collection__HashMaplayout_builders__TypingHasher_FT0abstract_collection__Setlayout_builders__TypingHasher_FT0;
extern const int COLOR_hash_collection__HashSetlayout_builders__TypingHasher_FT0;
val* layout_builders__TypingHasher__build_conflicts(val* self, val* p0);
extern const int COLOR_layout_builders__TypingHasher__init;
void layout_builders__MTypeHasher__init(val* self, val* p0, val* p1);
void layout_builders__MClassHasher__init(val* self, val* p0, val* p1);
extern const int COLOR_layout_builders__MPropertyHasher___64dmmodule;
val* layout_builders__MPropertyHasher__mmodule(val* self);
void layout_builders__MPropertyHasher__mmodule_61d(val* self, val* p0);
extern const int COLOR_layout_builders__MPropertyHasher__mmodule_61d;
void layout_builders__MPropertyHasher__init(val* self, val* p0, val* p1);
extern const struct type type_poset__POSetmodel__MClass;
extern const int COLOR_layout_builders__MPropertyHasher__mmodule;
extern const int COLOR_poset__POSetElement___60d;
val* layout_builders__MPropertyHasher__build_poset(val* self, val* p0);
extern const int COLOR_layout_builders__PHLayoutmodel__MClasslayout_builders__MPropertyHasher_FT0;
extern const int COLOR_hash_collection__HashMaplayout_builders__MPropertyHasher_FT0kernel__Int;
extern const int COLOR_layout_builders__MPropertyHasher__build_poset;
val* layout_builders__MPropertyHasher__build_layout(val* self, val* p0);
void layout_builders__ResolutionHasher__init(val* self, val* p0);
extern const struct type type_layout_builders__PHLayoutmodel__MClassTypemodel__MType;
val* layout_builders__ResolutionHasher__build_layout(val* self, val* p0);
