#include "nit.common.h"
extern const int COLOR_modelbuilder__ToolContext___64dopt_path;
val* modelbuilder__ToolContext__opt_path(val* self);
void modelbuilder__ToolContext__opt_path_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ToolContext___64dopt_only_metamodel;
val* modelbuilder__ToolContext__opt_only_metamodel(val* self);
void modelbuilder__ToolContext__opt_only_metamodel_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ToolContext___64dopt_only_parse;
val* modelbuilder__ToolContext__opt_only_parse(val* self);
void modelbuilder__ToolContext__opt_only_parse_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ToolContext__init;
extern const int COLOR_toolcontext__ToolContext__option_context;
extern const int COLOR_modelbuilder__ToolContext__opt_path;
extern const int COLOR_modelbuilder__ToolContext__opt_only_parse;
extern const int COLOR_modelbuilder__ToolContext__opt_only_metamodel;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arrayopts__Option;
val* NEW_array__NativeArray(int length, const struct type* type);
extern const struct type type_array__NativeArrayopts__Option;
extern const int COLOR_array__Array__with_native;
void CHECK_NEW_array__Array(val*);
extern const int COLOR_opts__OptionContext__add_option;
void modelbuilder__ToolContext__init(val* self);
extern const int COLOR_modelbuilder__ToolContext__modelbuilder_real;
val* modelbuilder__ToolContext__modelbuilder(val* self);
extern const int COLOR_modelbuilder__ToolContext___64dmodelbuilder_real;
val* modelbuilder__ToolContext__modelbuilder_real(val* self);
void modelbuilder__ToolContext__modelbuilder_real_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder___64dmodel;
val* modelbuilder__ModelBuilder__model(val* self);
void modelbuilder__ModelBuilder__model_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder___64dtoolcontext;
val* modelbuilder__ModelBuilder__toolcontext(val* self);
void modelbuilder__ModelBuilder__toolcontext_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder__model;
extern const int COLOR_model_base__Model__mmodules;
extern const int COLOR_array__Collection__to_a;
extern const int COLOR_model_base__Model__mmodule_importation_hierarchy;
extern const int COLOR_sorter__AbstractSorter__sort;
extern const struct type type_array__Arrayparser_nodes__AModule;
extern const int COLOR_array__Array__init;
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
extern const int COLOR_modelbuilder__ModelBuilder__mmodule2nmodule;
extern const int COLOR_abstract_collection__MapRead___91d_93d;
extern const int COLOR_abstract_collection__SimpleCollection__add;
extern const int COLOR_abstract_collection__Iterator__next;
extern const int COLOR_modelbuilder__ModelBuilder__toolcontext;
extern const int COLOR_phase__ToolContext__run_phases;
extern const int COLOR_opts__Option__value;
val* string__NativeString__to_s_with_length(char* self, long p0);
extern const int COLOR_toolcontext__ToolContext__info;
extern const int COLOR_kernel__Object__exit;
void modelbuilder__ModelBuilder__run_phases(val* self);
extern const int COLOR_modelbuilder__ModelBuilder__model_61d;
extern const int COLOR_modelbuilder__ModelBuilder__toolcontext_61d;
extern const int COLOR_modelbuilder__ToolContext__modelbuilder_real_61d;
extern const int COLOR_modelbuilder__ModelBuilder__paths;
extern const int COLOR_abstract_collection__Sequence__append;
extern const int COLOR_environ__String__environ;
extern const int COLOR_abstract_collection__Collection__is_empty;
extern const int COLOR_string_search__String__split_with;
extern const struct type type_array__Arraykernel__Object;
extern const int COLOR_array__Array__with_capacity;
extern const int COLOR_string__Object__to_s;
extern const int COLOR_file__String__file_exists;
extern const int COLOR_kernel__Object__sys;
extern const int COLOR_string__Sys__program_name;
extern const int COLOR_file__String__dirname;
extern const int COLOR_file__String__simplify_path;
void modelbuilder__ModelBuilder__init(val* self, val* p0, val* p1);
extern const int COLOR_time__Object__get_time;
extern const struct type type_array__Arraymodel_base__MModule;
extern const int COLOR_modelbuilder__ModelBuilder__load_module;
extern const int COLOR_modelbuilder__AModule__mmodule;
extern const struct type type_array__NativeArraykernel__Object;
extern const int COLOR_toolcontext__ToolContext__check_errors;
val* modelbuilder__ModelBuilder__parse(val* self, val* p0);
extern const int COLOR_model__Model__get_mclasses_by_name;
extern const int COLOR_model_base__MModule__in_importation;
extern const int COLOR_model__MClass__intro_mmodule;
extern const int COLOR_poset__POSetElement___60d_61d;
extern const int COLOR_model__MClass__visibility;
extern const int COLOR_model_base__MModule__is_visible;
extern const int COLOR_model__MClass__full_name;
extern const int COLOR_modelbuilder__ModelBuilder__error;
val* modelbuilder__ModelBuilder__try_get_mclass_by_name(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__Model__get_mproperties_by_name;
extern const int COLOR_modelbuilder__ModelBuilder__try_get_mproperty_by_name2_cache;
extern const int COLOR_more_collections__HashMap3___91d_93d;
extern const int COLOR_model__MType__has_mproperty;
extern const int COLOR_model__MProperty__intro_mclassdef;
extern const int COLOR_model__MClassDef__mmodule;
extern const int COLOR_model__MProperty__visibility;
extern const int COLOR_model__MClassDef__bound_mtype;
extern const int COLOR_model__MType__is_subtype;
extern const struct type type_array__Arraymodel__MProperty;
extern const int COLOR_model__MProperty__full_name;
extern const int COLOR_more_collections__HashMap3___91d_93d_61d;
val* modelbuilder__ModelBuilder__try_get_mproperty_by_name2(val* self, val* p0, val* p1, val* p2, val* p3);
extern const int COLOR_modelbuilder__ModelBuilder___64dtry_get_mproperty_by_name2_cache;
val* modelbuilder__ModelBuilder__try_get_mproperty_by_name2_cache(val* self);
void modelbuilder__ModelBuilder__try_get_mproperty_by_name2_cache_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder__try_get_mproperty_by_name2;
val* modelbuilder__ModelBuilder__try_get_mproperty_by_name(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_modelbuilder__ModelBuilder___64dpaths;
val* modelbuilder__ModelBuilder__paths(val* self);
void modelbuilder__ModelBuilder__paths_61d(val* self, val* p0);
extern const int COLOR_model_base__Model__get_mmodules_by_name;
extern const struct type type_array__Arraystring__String;
extern const int COLOR_model_base__MModule__location;
extern const int COLOR_location__Location__file;
extern const int COLOR_location__SourceFile__filename;
extern const int COLOR_file__String__basename;
extern const int COLOR_model_base__MModule__name;
extern const int COLOR_kernel__Object___33d_61d;
extern const int COLOR_model_base__MModule__direct_owner;
extern const int COLOR_kernel__Object___61d_61d;
extern const int COLOR_string__String___43d;
extern const int COLOR_abstract_collection__Collection__has;
extern const int COLOR_modelbuilder__ModelBuilder__module_absolute_path;
extern const int COLOR_string__Collection__join;
val* modelbuilder__ModelBuilder__get_mmodule_by_name(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_string__AbstractString__has_prefix;
extern const int COLOR_file__Object__getcwd;
extern const int COLOR_file__String__join_path;
val* modelbuilder__ModelBuilder__module_absolute_path(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder___64dloaded_nmodules;
val* modelbuilder__ModelBuilder__loaded_nmodules(val* self);
void modelbuilder__ModelBuilder__loaded_nmodules_61d(val* self, val* p0);
extern const int COLOR_file__String__file_extension;
extern const int COLOR_toolcontext__ToolContext__error;
extern const int COLOR_modelbuilder__ModelBuilder__loaded_nmodules;
extern const int COLOR_abstract_collection__MapRead__keys;
val* NEW_file__IFStream(const struct type* type);
extern const struct type type_file__IFStream;
extern const int COLOR_file__IFStream__open;
void CHECK_NEW_file__IFStream(val*);
val* NEW_lexer__Lexer(const struct type* type);
extern const struct type type_lexer__Lexer;
val* NEW_location__SourceFile(const struct type* type);
extern const struct type type_location__SourceFile;
extern const int COLOR_location__SourceFile__init;
void CHECK_NEW_location__SourceFile(val*);
extern const int COLOR_lexer__Lexer__init;
void CHECK_NEW_lexer__Lexer(val*);
val* NEW_parser__Parser(const struct type* type);
extern const struct type type_parser__Parser;
extern const int COLOR_parser__Parser__init;
void CHECK_NEW_parser__Parser(val*);
extern const int COLOR_parser__Parser__parse;
extern const int COLOR_stream__IOS__close;
extern const int COLOR_modelbuilder__ModelBuilder__load_module_commons;
val* modelbuilder__ModelBuilder__load_module(val* self, val* p0, val* p1);
val* NEW_model_base__MModule(const struct type* type);
extern const struct type type_model_base__MModule;
extern const int COLOR_parser_nodes__ANode__location;
extern const int COLOR_model_base__MModule__init;
void CHECK_NEW_model_base__MModule(val*);
extern const int COLOR_modelbuilder__AModule__mmodule_61d;
extern const int COLOR_modelbuilder__ModelBuilder__nmodules;
extern const int COLOR_abstract_collection__Map___91d_93d_61d;
extern const int COLOR_model_base__Object__intrude_visibility;
extern const int COLOR_model_base__MModule__set_visibility_for;
extern const int COLOR_model_base__MModule__set_imported_mmodules;
val* modelbuilder__ModelBuilder__load_rt_module(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_parser_nodes__Start__n_base;
extern const int COLOR_parser_nodes__Start__n_eof;
extern const struct type type_parser_nodes__AError;
extern const int COLOR_lexer__AError__message;
extern const int COLOR_parser_nodes__AModule__n_moduledecl;
extern const int COLOR_parser_nodes__AModuledecl__n_name;
extern const int COLOR_parser_nodes__AModuleName__n_id;
extern const int COLOR_parser_nodes__Token__text;
extern const int COLOR_modelbuilder__ModelBuilder__build_module_importation;
val* modelbuilder__ModelBuilder__load_module_commons(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_modelbuilder__AModule__is_importation_done;
extern const int COLOR_modelbuilder__AModule__is_importation_done_61d;
extern const int COLOR_parser_nodes__AModule__n_imports;
extern const struct type type_parser_nodes__AStdImport;
extern const int COLOR_parser_nodes__AStdImport__n_name;
extern const int COLOR_modelbuilder__ModelBuilder__get_mmodule_by_name;
extern const int COLOR_modelbuilder__AStdImport__mmodule_61d;
extern const int COLOR_parser_nodes__AStdImport__n_visibility;
extern const int COLOR_modelbuilder__AVisibility__mvisibility;
extern const int COLOR_model_base__Object__protected_visibility;
extern const int COLOR_model_base__Object__public_visibility;
void modelbuilder__ModelBuilder__build_module_importation(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder___64dnmodules;
val* modelbuilder__ModelBuilder__nmodules(val* self);
void modelbuilder__ModelBuilder__nmodules_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__ModelBuilder___64dmmodule2nmodule;
val* modelbuilder__ModelBuilder__mmodule2nmodule(val* self);
void modelbuilder__ModelBuilder__mmodule2nmodule_61d(val* self, val* p0);
extern const int COLOR_parser_nodes__ANode__hot_location;
void modelbuilder__ModelBuilder__error(val* self, val* p0, val* p1);
extern const int COLOR_toolcontext__ToolContext__warning;
void modelbuilder__ModelBuilder__warning(val* self, val* p0, val* p1);
extern const int COLOR_model__MModule__try_get_primitive_method;
extern const int COLOR_toolcontext__ToolContext__fatal_error;
val* modelbuilder__ModelBuilder__force_get_primitive_method(val* self, val* p0, val* p1, val* p2, val* p3);
extern const int COLOR_modelbuilder__AStdImport___64dmmodule;
val* modelbuilder__AStdImport__mmodule(val* self);
void modelbuilder__AStdImport__mmodule_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__AModule___64dmmodule;
val* modelbuilder__AModule__mmodule(val* self);
void modelbuilder__AModule__mmodule_61d(val* self, val* p0);
extern const int COLOR_modelbuilder__AModule___64dis_importation_done;
short int modelbuilder__AModule__is_importation_done(val* self);
void modelbuilder__AModule__is_importation_done_61d(val* self, short int p0);
val* modelbuilder__AVisibility__mvisibility(val* self);
val* modelbuilder__AIntrudeVisibility__mvisibility(val* self);
val* modelbuilder__APublicVisibility__mvisibility(val* self);
val* modelbuilder__AProtectedVisibility__mvisibility(val* self);
extern const int COLOR_model_base__Object__private_visibility;
val* modelbuilder__APrivateVisibility__mvisibility(val* self);
