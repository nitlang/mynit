#include "nit.common.h"
extern const int COLOR_extern_classes__ToolContext___64dextern_classes_typing_phase_ast;
val* extern_classes__ToolContext__extern_classes_typing_phase_ast(val* self);
void extern_classes__ToolContext__extern_classes_typing_phase_ast_61d(val* self, val* p0);
extern const int COLOR_extern_classes__ToolContext___64dextern_classes_typing_phase_model;
val* extern_classes__ToolContext__extern_classes_typing_phase_model(val* self);
void extern_classes__ToolContext__extern_classes_typing_phase_model_61d(val* self, val* p0);
extern const struct type type_parser_nodes__AStdClassdef;
extern const int COLOR_parser_nodes__AStdClassdef__n_extern_code_block;
extern const int COLOR_parser_nodes__AStdClassdef__n_kwredef;
extern const int COLOR_phase__Phase__toolcontext;
extern const int COLOR_parser_nodes__ANode__location;
val* string__NativeString__to_s_with_length(char* self, long p0);
extern const int COLOR_toolcontext__ToolContext__error;
extern const int COLOR_ffi_base__AExternCodeBlock__language;
extern const int COLOR_ffi_base__FFILanguage__get_ftype;
extern const int COLOR_extern_classes__AClassdef__ftype_cache_61d;
extern const int COLOR_extern_classes__AClassdef__ftype_computed_61d;
void extern_classes__ExternClassesTypingPhaseAst__process_nclassdef(val* self, val* p0);
extern const int COLOR_extern_classes__AClassdef___64dftype_cache;
val* extern_classes__AClassdef__ftype_cache(val* self);
void extern_classes__AClassdef__ftype_cache_61d(val* self, val* p0);
extern const int COLOR_extern_classes__AClassdef___64dftype_computed;
short int extern_classes__AClassdef__ftype_computed(val* self);
void extern_classes__AClassdef__ftype_computed_61d(val* self, short int p0);
extern const int COLOR_extern_classes__AClassdef__ftype_cache;
val* extern_classes__AClassdef__ftype(val* self);
extern const int COLOR_modelize_class__AClassdef__mclassdef;
extern const int COLOR_modelize_class__AClassdef__mclass;
extern const int COLOR_model__MClass__intro;
extern const int COLOR_kernel__Object___33d_61d;
extern const int COLOR_model__MClass__kind;
extern const int COLOR_model__Object__extern_kind;
extern const int COLOR_extern_classes__MClass__compute_ftype;
void extern_classes__ExternClassesTypingPhaseModel__process_nclassdef(val* self, val* p0);
extern const int COLOR_extern_classes__MClass___64dftype_cache;
val* extern_classes__MClass__ftype_cache(val* self);
void extern_classes__MClass__ftype_cache_61d(val* self, val* p0);
extern const int COLOR_extern_classes__MClass___64dftype_computed;
short int extern_classes__MClass__ftype_computed(val* self);
void extern_classes__MClass__ftype_computed_61d(val* self, short int p0);
extern const int COLOR_extern_classes__MClass__ftype_cache;
val* extern_classes__MClass__ftype(val* self);
extern const int COLOR_ffi_base__ForeignType__ctype;
val* extern_classes__MClass__ctype(val* self);
extern const int COLOR_extern_classes__MClass__ftype_computed;
extern const int COLOR_model__MClass__name;
extern const int COLOR_kernel__Object___61d_61d;
val* NEW_ffi_base__ForeignType(const struct type* type);
extern const struct type type_ffi_base__ForeignType;
extern const int COLOR_ffi_base__ForeignType__init;
void CHECK_NEW_ffi_base__ForeignType(val*);
extern const int COLOR_extern_classes__MClass__ftype_cache_61d;
extern const int COLOR_extern_classes__MClass__ftype_computed_61d;
extern const int COLOR_modelbuilder__ToolContext__modelbuilder;
extern const int COLOR_modelize_class__ModelBuilder__mclassdef2nclassdef;
extern const int COLOR_abstract_collection__MapRead___91d_93d;
extern const int COLOR_extern_classes__AClassdef__ftype;
extern const int COLOR_model__MClassDef__mmodule;
extern const int COLOR_model__MClass__in_hierarchy;
extern const int COLOR_poset__POSetElement__direct_greaters;
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arraykernel__Object;
val* NEW_array__NativeArray(int length, const struct type* type);
extern const struct type type_array__NativeArraykernel__Object;
extern const int COLOR_array__Array__with_native;
void CHECK_NEW_array__Array(val*);
extern const int COLOR_string__Object__to_s;
extern const int COLOR_abstract_collection__Iterator__next;
val* extern_classes__MClass__compute_ftype(val* self, val* p0);
