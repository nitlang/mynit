#include "nit.common.h"
extern const int COLOR_model__Model___64dmclasses;
val* model__Model__mclasses(val* self);
void model__Model__mclasses_61d(val* self, val* p0);
extern const int COLOR_model__Model___64dmproperties;
val* model__Model__mproperties(val* self);
void model__Model__mproperties_61d(val* self, val* p0);
extern const int COLOR_model__Model___64dmclassdef_hierarchy;
val* model__Model__mclassdef_hierarchy(val* self);
void model__Model__mclassdef_hierarchy_61d(val* self, val* p0);
extern const int COLOR_model__Model___64dintro_mtype_specialization_hierarchy;
val* model__Model__intro_mtype_specialization_hierarchy(val* self);
void model__Model__intro_mtype_specialization_hierarchy_61d(val* self, val* p0);
extern const int COLOR_model__Model___64dfull_mtype_specialization_hierarchy;
val* model__Model__full_mtype_specialization_hierarchy(val* self);
void model__Model__full_mtype_specialization_hierarchy_61d(val* self, val* p0);
extern const int COLOR_model__Model___64dmclasses_by_name;
val* model__Model__mclasses_by_name(val* self);
void model__Model__mclasses_by_name_61d(val* self, val* p0);
extern const int COLOR_model__Model__mclasses_by_name;
extern const int COLOR_abstract_collection__MapRead__has_key;
extern const int COLOR_abstract_collection__MapRead___91d_93d;
val* model__Model__get_mclasses_by_name(val* self, val* p0);
extern const int COLOR_model__Model___64dmproperties_by_name;
val* model__Model__mproperties_by_name(val* self);
void model__Model__mproperties_by_name_61d(val* self, val* p0);
extern const int COLOR_model__Model__mproperties_by_name;
val* model__Model__get_mproperties_by_name(val* self, val* p0);
extern const int COLOR_model__Model___64dnull_type;
val* model__Model__null_type(val* self);
void model__Model__null_type_61d(val* self, val* p0);
extern const int COLOR_model__MModule___64dintro_mclasses;
val* model__MModule__intro_mclasses(val* self);
void model__MModule__intro_mclasses_61d(val* self, val* p0);
extern const int COLOR_model__MModule___64dmclassdefs;
val* model__MModule__mclassdefs(val* self);
void model__MModule__mclassdefs_61d(val* self, val* p0);
extern const int COLOR_mmodule__MModule__in_importation;
extern const int COLOR_model__MClass__intro_mmodule;
extern const int COLOR_poset__POSetElement___60d_61d;
short int model__MModule__has_mclass(val* self, val* p0);
extern const int COLOR_model__MModule__flatten_mclass_hierarchy_cache;
val* NEW_poset__POSet(const struct type* type);
extern const struct type type_poset__POSetmodel__MClass;
extern const int COLOR_poset__POSet__init;
extern const int COLOR_poset__POSetElement__greaters;
extern const int COLOR_abstract_collection__Collection__iterator;
extern const int COLOR_abstract_collection__Iterator__is_ok;
extern const int COLOR_abstract_collection__Iterator__item;
extern const int COLOR_model__MModule__mclassdefs;
extern const int COLOR_model__MClassDef__mclass;
extern const int COLOR_poset__POSet__add_node;
extern const int COLOR_model__MClassDef__supertypes;
extern const int COLOR_model__MClassType__mclass;
extern const int COLOR_poset__POSet__add_edge;
extern const int COLOR_abstract_collection__Iterator__next;
extern const int COLOR_model__MModule__flatten_mclass_hierarchy_cache_61d;
val* model__MModule__flatten_mclass_hierarchy(val* self);
extern const int COLOR_model__MModule__flatten_mclass_hierarchy;
extern const int COLOR_sorter__AbstractSorter__sort;
void model__MModule__linearize_mclasses(val* self, val* p0);
val* NEW_model__MClassDefSorter(const struct type* type);
extern const struct type type_model__MClassDefSorter;
extern const int COLOR_model__MClassDefSorter__init;
void model__MModule__linearize_mclassdefs(val* self, val* p0);
val* NEW_model__MPropDefSorter(const struct type* type);
extern const struct type type_model__MPropDefSorter;
extern const int COLOR_model__MPropDefSorter__init;
void model__MModule__linearize_mpropdefs(val* self, val* p0);
extern const int COLOR_model__MModule___64dflatten_mclass_hierarchy_cache;
val* model__MModule__flatten_mclass_hierarchy_cache(val* self);
void model__MModule__flatten_mclass_hierarchy_cache_61d(val* self, val* p0);
extern const int COLOR_model__MModule__object_type_cache;
val* string__NativeString__to_s_with_length(char* self, long p0);
extern const int COLOR_model__MModule__get_primitive_class;
extern const int COLOR_model__MClass__mclass_type;
extern const int COLOR_model__MModule__object_type_cache_61d;
val* model__MModule__object_type(val* self);
extern const int COLOR_model__MModule___64dobject_type_cache;
val* model__MModule__object_type_cache(val* self);
void model__MModule__object_type_cache_61d(val* self, val* p0);
extern const int COLOR_model__MModule__bool_type_cache;
extern const int COLOR_model__MModule__bool_type_cache_61d;
val* model__MModule__bool_type(val* self);
extern const int COLOR_model__MModule___64dbool_type_cache;
val* model__MModule__bool_type_cache(val* self);
void model__MModule__bool_type_cache_61d(val* self, val* p0);
extern const int COLOR_mmodule__MModule__model;
extern const int COLOR_model__Model__get_mclasses_by_name;
val* model__MModule__sys_type(val* self);
extern const int COLOR_kernel__Object___61d_61d;
val* NEW_model__MClass(const struct type* type);
extern const struct type type_model__MClass;
extern const int COLOR_model__Object__enum_kind;
extern const int COLOR_model_base__Object__public_visibility;
extern const int COLOR_model__MClass__init;
val* NEW_model__MClassDef(const struct type* type);
extern const struct type type_model__MClassDef;
val* NEW_location__Location(const struct type* type);
extern const struct type type_location__Location;
extern const int COLOR_location__Location__init;
val* NEW_array__Array(const struct type* type);
extern const struct type type_array__Arraystring__String;
extern const int COLOR_array__Array__init;
extern const int COLOR_model__MClassDef__init;
extern const struct type type_array__Arraykernel__Object;
val* NEW_array__NativeArray(int length, const struct type* type);
extern const struct type type_array__NativeArraykernel__Object;
extern const int COLOR_array__Array__with_native;
extern const int COLOR_string__Object__to_s;
extern const int COLOR_file__Object__print;
extern const int COLOR_kernel__Object__exit;
extern const int COLOR_abstract_collection__Collection__length;
extern const int COLOR_string__Collection__join;
extern const int COLOR_abstract_collection__Collection__first;
val* model__MModule__get_primitive_class(val* self, val* p0);
extern const int COLOR_model__Model__get_mproperties_by_name;
extern const struct type type_model__MMethod;
extern const int COLOR_model__MProperty__intro_mclassdef;
extern const int COLOR_model__MClass__mclassdefs;
extern const int COLOR_model__MClassDef__mmodule;
extern const int COLOR_abstract_collection__Collection__has;
extern const int COLOR_model__MClassDef__in_hierarchy;
extern const int COLOR_kernel__Object___33d_61d;
extern const int COLOR_model__MProperty__full_name;
val* model__MModule__try_get_primitive_method(val* self, val* p0, val* p1);
extern const int COLOR_model__MClassDefSorter___64dmmodule;
val* model__MClassDefSorter__mmodule(val* self);
void model__MClassDefSorter__mmodule_61d(val* self, val* p0);
extern const int COLOR_model__MClassDefSorter__mmodule;
extern const int COLOR_sorter__AbstractSorter__compare;
extern const int COLOR_model__Model__mclassdef_hierarchy;
long model__MClassDefSorter__compare(val* self, val* p0, val* p1);
void model__MClassDefSorter__init(val* self, val* p0);
extern const int COLOR_model__MPropDefSorter___64dmmodule;
val* model__MPropDefSorter__mmodule(val* self);
void model__MPropDefSorter__mmodule_61d(val* self, val* p0);
extern const int COLOR_model__MPropDef__mclassdef;
extern const int COLOR_model__MPropDefSorter__mmodule;
long model__MPropDefSorter__compare(val* self, val* p0, val* p1);
void model__MPropDefSorter__init(val* self, val* p0);
extern const int COLOR_model__MClass___64dintro_mmodule;
val* model__MClass__intro_mmodule(val* self);
void model__MClass__intro_mmodule_61d(val* self, val* p0);
extern const int COLOR_model__MClass___64dname;
val* model__MClass__name(val* self);
void model__MClass__name_61d(val* self, val* p0);
extern const int COLOR_array__Array__with_capacity;
extern const int COLOR_abstract_collection__SimpleCollection__add;
extern const int COLOR_mmodule__MModule__full_name;
extern const int COLOR_model__MClass__name;
val* model__MClass__full_name(val* self);
extern const int COLOR_model__MClass___64darity;
long model__MClass__arity(val* self);
void model__MClass__arity_61d(val* self, long p0);
extern const int COLOR_model__MClass___64dkind;
val* model__MClass__kind(val* self);
void model__MClass__kind_61d(val* self, val* p0);
extern const int COLOR_model__MClass___64dvisibility;
val* model__MClass__visibility(val* self);
void model__MClass__visibility_61d(val* self, val* p0);
extern const int COLOR_model__MClass__intro_mmodule_61d;
extern const int COLOR_model__MClass__name_61d;
extern const int COLOR_model__MClass__arity_61d;
extern const int COLOR_model__MClass__kind_61d;
extern const int COLOR_model__MClass__visibility_61d;
extern const int COLOR_model__MModule__intro_mclasses;
extern const int COLOR_more_collections__MultiHashMap__add_one;
extern const int COLOR_model__Model__mclasses;
extern const struct type type_kernel__Int;
extern const struct type type_array__Arraymodel__MParameterType;
val* NEW_range__Range(const struct type* type);
extern const struct type type_range__Rangekernel__Int;
val* BOX_kernel__Int(long);
extern const int COLOR_range__Range__without_last;
val* NEW_model__MParameterType(const struct type* type);
extern const struct type type_model__MParameterType;
extern const int COLOR_model__MParameterType__init;
val* NEW_model__MGenericType(const struct type* type);
extern const struct type type_model__MGenericType;
extern const int COLOR_model__MGenericType__init;
extern const int COLOR_model__MClass__mclass_type_61d;
extern const int COLOR_model__MClass__get_mtype_cache;
val* NEW_model__MClassType(const struct type* type);
extern const struct type type_model__MClassType;
extern const int COLOR_model__MClassType__init;
void model__MClass__init(val* self, val* p0, val* p1, long p2, val* p3, val* p4);
extern const int COLOR_model__MClass___64dmclassdefs;
val* model__MClass__mclassdefs(val* self);
void model__MClass__mclassdefs_61d(val* self, val* p0);
val* model__MClass__to_s(val* self);
extern const int COLOR_abstract_collection__Collection__is_empty;
val* model__MClass__intro(val* self);
extern const int COLOR_poset__POSet___91d_93d;
val* model__MClass__in_hierarchy(val* self, val* p0);
extern const int COLOR_model__MClass___64dmclass_type;
val* model__MClass__mclass_type(val* self);
void model__MClass__mclass_type_61d(val* self, val* p0);
extern const int COLOR_model__MClass__arity;
extern const int COLOR_model__MClassType__arguments;
val* model__MClass__get_mtype(val* self, val* p0);
extern const int COLOR_model__MClass___64dget_mtype_cache;
val* model__MClass__get_mtype_cache(val* self);
void model__MClass__get_mtype_cache_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dmmodule;
val* model__MClassDef__mmodule(val* self);
void model__MClassDef__mmodule_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dmclass;
val* model__MClassDef__mclass(val* self);
void model__MClassDef__mclass_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dbound_mtype;
val* model__MClassDef__bound_mtype(val* self);
void model__MClassDef__bound_mtype_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dparameter_names;
val* model__MClassDef__parameter_names(val* self);
void model__MClassDef__parameter_names_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dlocation;
val* model__MClassDef__location(val* self);
void model__MClassDef__location_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dto_s;
val* model__MClassDef__to_s(val* self);
void model__MClassDef__to_s_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef__bound_mtype_61d;
extern const int COLOR_model__MClassDef__mmodule_61d;
extern const int COLOR_model__MClassDef__mclass_61d;
extern const int COLOR_model__MClassDef__location_61d;
extern const int COLOR_model__MClassDef__parameter_names_61d;
extern const int COLOR_model__MClassDef__to_s_61d;
void model__MClassDef__init(val* self, val* p0, val* p1, val* p2, val* p3);
extern const int COLOR_model__MClassDef___64dsupertypes;
val* model__MClassDef__supertypes(val* self);
void model__MClassDef__supertypes_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef__bound_mtype;
extern const int COLOR_model__Model__full_mtype_specialization_hierarchy;
extern const int COLOR_model__Model__intro_mtype_specialization_hierarchy;
void model__MClassDef__set_supertypes(val* self, val* p0);
extern const int COLOR_model__MClassDef__in_hierarchy_61d;
extern const int COLOR_model__MType__collect_mclassdefs;
extern const int COLOR_poset__POSetElement__poset;
void model__MClassDef__add_in_hierarchy(val* self);
extern const int COLOR_model__MClassDef___64din_hierarchy;
val* model__MClassDef__in_hierarchy(val* self);
void model__MClassDef__in_hierarchy_61d(val* self, val* p0);
extern const int COLOR_model__MClass__intro;
short int model__MClassDef__is_intro(val* self);
extern const int COLOR_model__MClassDef___64dintro_mproperties;
val* model__MClassDef__intro_mproperties(val* self);
void model__MClassDef__intro_mproperties_61d(val* self, val* p0);
extern const int COLOR_model__MClassDef___64dmpropdefs;
val* model__MClassDef__mpropdefs(val* self);
void model__MClassDef__mpropdefs_61d(val* self, val* p0);
val* model__MType__model(val* self);
extern const int COLOR_model__MType__need_anchor;
extern const int COLOR_model__MType__can_resolve_for;
extern const struct type type_model__MVirtualType;
extern const int COLOR_model__MType__resolve_for;
extern const struct type type_model__MNullableType;
extern const int COLOR_model__MNullableType__mtype;
extern const struct type type_model__MNullType;
extern const int COLOR_model__MType__anchor_to;
extern const int COLOR_model__MType__collect_mclasses;
extern const int COLOR_model__MType__supertype_to;
extern const int COLOR_abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_model__MType__is_subtype;
short int model__MType__is_subtype(val* self, val* p0, val* p1, val* p2);
val* model__MType__anchor_to(val* self, val* p0, val* p1);
short int model__MType__need_anchor(val* self);
extern const int COLOR_model__MType__collect_mtypes;
val* model__MType__supertype_to(val* self, val* p0, val* p1, val* p2);
val* model__MType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
short int model__MType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MType__as_nullable_cache;
val* NEW_model__MNullableType(const struct type* type);
extern const int COLOR_model__MNullableType__init;
extern const int COLOR_model__MType__as_nullable_cache_61d;
val* model__MType__as_nullable(val* self);
extern const int COLOR_model__MType___64das_nullable_cache;
val* model__MType__as_nullable_cache(val* self);
void model__MType__as_nullable_cache_61d(val* self, val* p0);
long model__MType__depth(val* self);
long model__MType__length(val* self);
val* model__MType__collect_mclassdefs(val* self, val* p0);
val* model__MType__collect_mclasses(val* self, val* p0);
val* model__MType__collect_mtypes(val* self, val* p0);
short int model__MType__has_mproperty(val* self, val* p0, val* p1);
void model__MType__init(val* self);
extern const int COLOR_model__MClassType___64dmclass;
val* model__MClassType__mclass(val* self);
void model__MClassType__mclass_61d(val* self, val* p0);
val* model__MClassType__model(val* self);
extern const int COLOR_model__MType__init;
extern const int COLOR_model__MClassType__mclass_61d;
void model__MClassType__init(val* self, val* p0);
extern const int COLOR_model__MClassType___64darguments;
val* model__MClassType__arguments(val* self);
void model__MClassType__arguments_61d(val* self, val* p0);
val* model__MClassType__to_s(val* self);
short int model__MClassType__need_anchor(val* self);
extern const int COLOR_model__MClassType__anchor_to;
val* model__MClassType__anchor_to(val* self, val* p0, val* p1);
val* model__MClassType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
short int model__MClassType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MClassType__collect_mclassdefs_cache;
extern const int COLOR_model__MClassType__collect_things;
val* model__MClassType__collect_mclassdefs(val* self, val* p0);
extern const int COLOR_model__MClassType__collect_mclasses_cache;
val* model__MClassType__collect_mclasses(val* self, val* p0);
extern const int COLOR_model__MClassType__collect_mtypes_cache;
val* model__MClassType__collect_mtypes(val* self, val* p0);
val* NEW_hash_collection__HashSet(const struct type* type);
extern const struct type type_hash_collection__HashSetmodel__MClassDef;
extern const int COLOR_hash_collection__HashSet__init;
extern const struct type type_hash_collection__HashSetmodel__MClass;
extern const struct type type_hash_collection__HashSetmodel__MClassType;
extern const struct type type_array__Arraymodel__MClass;
extern const int COLOR_abstract_collection__Sequence__push;
extern const int COLOR_abstract_collection__Sequence__pop;
extern const int COLOR_abstract_collection__Map___91d_93d_61d;
void model__MClassType__collect_things(val* self, val* p0);
extern const int COLOR_model__MClassType___64dcollect_mclassdefs_cache;
val* model__MClassType__collect_mclassdefs_cache(val* self);
void model__MClassType__collect_mclassdefs_cache_61d(val* self, val* p0);
extern const int COLOR_model__MClassType___64dcollect_mclasses_cache;
val* model__MClassType__collect_mclasses_cache(val* self);
void model__MClassType__collect_mclasses_cache_61d(val* self, val* p0);
extern const int COLOR_model__MClassType___64dcollect_mtypes_cache;
val* model__MClassType__collect_mtypes_cache(val* self);
void model__MClassType__collect_mtypes_cache_61d(val* self, val* p0);
extern const int COLOR_model__MClassType__arguments_61d;
extern const int COLOR_model__MGenericType__need_anchor_61d;
extern const int COLOR_model__MGenericType__to_s_61d;
void model__MGenericType__init(val* self, val* p0, val* p1);
extern const int COLOR_model__MGenericType___64dto_s;
val* model__MGenericType__to_s(val* self);
void model__MGenericType__to_s_61d(val* self, val* p0);
extern const int COLOR_model__MGenericType___64dneed_anchor;
short int model__MGenericType__need_anchor(val* self);
void model__MGenericType__need_anchor_61d(val* self, short int p0);
extern const struct type type_array__Arraymodel__MType;
extern const int COLOR_model__MClass__get_mtype;
val* model__MGenericType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
short int model__MGenericType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MType__depth;
long model__MGenericType__depth(val* self);
extern const int COLOR_model__MType__length;
long model__MGenericType__length(val* self);
extern const int COLOR_model__MVirtualType___64dmproperty;
val* model__MVirtualType__mproperty(val* self);
void model__MVirtualType__mproperty_61d(val* self, val* p0);
extern const int COLOR_model__MVirtualType__mproperty;
val* model__MVirtualType__model(val* self);
extern const int COLOR_model__MProperty__lookup_definitions;
extern const struct type type_model__MVirtualTypeDef;
extern const int COLOR_model__MVirtualTypeDef__bound;
val* NEW_array__ArraySet(const struct type* type);
extern const struct type type_array__ArraySetmodel__MType;
extern const int COLOR_array__ArraySet__init;
val* model__MVirtualType__lookup_bound(val* self, val* p0, val* p1);
extern const int COLOR_model__MVirtualType__lookup_bound;
extern const int COLOR_model__MClass__kind;
val* model__MVirtualType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
extern const int COLOR_model__MType__has_mproperty;
short int model__MVirtualType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
val* model__MVirtualType__to_s(val* self);
extern const int COLOR_model__MVirtualType__mproperty_61d;
void model__MVirtualType__init(val* self, val* p0);
extern const int COLOR_model__MParameterType___64dmclass;
val* model__MParameterType__mclass(val* self);
void model__MParameterType__mclass_61d(val* self, val* p0);
extern const int COLOR_model__MParameterType__mclass;
val* model__MParameterType__model(val* self);
extern const int COLOR_model__MParameterType___64drank;
long model__MParameterType__rank(val* self);
void model__MParameterType__rank_61d(val* self, long p0);
extern const int COLOR_model__MParameterType__rank;
val* model__MParameterType__to_s(val* self);
val* model__MParameterType__lookup_bound(val* self, val* p0, val* p1);
extern const int COLOR_model__MParameterType__lookup_bound;
val* model__MParameterType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
short int model__MParameterType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MParameterType__mclass_61d;
extern const int COLOR_model__MParameterType__rank_61d;
void model__MParameterType__init(val* self, val* p0, long p1);
extern const int COLOR_model__MNullableType___64dmtype;
val* model__MNullableType__mtype(val* self);
void model__MNullableType__mtype_61d(val* self, val* p0);
extern const int COLOR_model__MType__model;
val* model__MNullableType__model(val* self);
extern const int COLOR_model__MNullableType__mtype_61d;
extern const int COLOR_model__MNullableType__to_s_61d;
void model__MNullableType__init(val* self, val* p0);
extern const int COLOR_model__MNullableType___64dto_s;
val* model__MNullableType__to_s(val* self);
void model__MNullableType__to_s_61d(val* self, val* p0);
short int model__MNullableType__need_anchor(val* self);
val* model__MNullableType__as_nullable(val* self);
extern const int COLOR_model__MType__as_nullable;
val* model__MNullableType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
short int model__MNullableType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
long model__MNullableType__depth(val* self);
long model__MNullableType__length(val* self);
val* model__MNullableType__collect_mclassdefs(val* self, val* p0);
val* model__MNullableType__collect_mclasses(val* self, val* p0);
val* model__MNullableType__collect_mtypes(val* self, val* p0);
extern const int COLOR_model__MNullType___64dmodel;
val* model__MNullType__model(val* self);
void model__MNullType__model_61d(val* self, val* p0);
extern const int COLOR_model__MNullType__model_61d;
void model__MNullType__init(val* self, val* p0);
val* model__MNullType__to_s(val* self);
val* model__MNullType__as_nullable(val* self);
short int model__MNullType__need_anchor(val* self);
val* model__MNullType__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
short int model__MNullType__can_resolve_for(val* self, val* p0, val* p1, val* p2);
val* model__MNullType__collect_mclassdefs(val* self, val* p0);
val* model__MNullType__collect_mclasses(val* self, val* p0);
val* model__MNullType__collect_mtypes(val* self, val* p0);
extern const int COLOR_model__MSignature___64dmparameters;
val* model__MSignature__mparameters(val* self);
void model__MSignature__mparameters_61d(val* self, val* p0);
extern const int COLOR_model__MSignature___64dreturn_mtype;
val* model__MSignature__return_mtype(val* self);
void model__MSignature__return_mtype_61d(val* self, val* p0);
extern const int COLOR_model__MSignature__return_mtype;
extern const int COLOR_model__MSignature__mparameters;
extern const int COLOR_model__MParameter__mtype;
long model__MSignature__depth(val* self);
long model__MSignature__length(val* self);
extern const int COLOR_model__MParameter__is_vararg;
extern const int COLOR_model__MSignature__mparameters_61d;
extern const int COLOR_model__MSignature__return_mtype_61d;
extern const int COLOR_model__MSignature__vararg_rank_61d;
void model__MSignature__init(val* self, val* p0, val* p1);
extern const int COLOR_model__MSignature___64dvararg_rank;
long model__MSignature__vararg_rank(val* self);
void model__MSignature__vararg_rank_61d(val* self, long p0);
long model__MSignature__arity(val* self);
val* NEW_string__Buffer(const struct type* type);
extern const struct type type_string__Buffer;
extern const int COLOR_string__Buffer__init;
extern const int COLOR_abstract_collection__Sequence__append;
extern const int COLOR_model__MParameter__name;
val* model__MSignature__to_s(val* self);
extern const struct type type_array__Arraymodel__MParameter;
extern const int COLOR_model__MParameter__resolve_for;
val* NEW_model__MSignature(const struct type* type);
extern const struct type type_model__MSignature;
extern const int COLOR_model__MSignature__init;
val* model__MSignature__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
extern const int COLOR_model__MParameter___64dname;
val* model__MParameter__name(val* self);
void model__MParameter__name_61d(val* self, val* p0);
extern const int COLOR_model__MParameter___64dmtype;
val* model__MParameter__mtype(val* self);
void model__MParameter__mtype_61d(val* self, val* p0);
extern const int COLOR_model__MParameter___64dis_vararg;
short int model__MParameter__is_vararg(val* self);
void model__MParameter__is_vararg_61d(val* self, short int p0);
val* NEW_model__MParameter(const struct type* type);
extern const struct type type_model__MParameter;
extern const int COLOR_model__MParameter__init;
val* model__MParameter__resolve_for(val* self, val* p0, val* p1, val* p2, short int p3);
void model__MParameter__init(val* self, val* p0, val* p1, short int p2);
extern const int COLOR_model__MProperty___64dintro_mclassdef;
val* model__MProperty__intro_mclassdef(val* self);
void model__MProperty__intro_mclassdef_61d(val* self, val* p0);
extern const int COLOR_model__MProperty___64dname;
val* model__MProperty__name(val* self);
void model__MProperty__name_61d(val* self, val* p0);
extern const int COLOR_model__MProperty__name;
val* model__MProperty__full_name(val* self);
extern const int COLOR_model__MProperty___64dvisibility;
val* model__MProperty__visibility(val* self);
void model__MProperty__visibility_61d(val* self, val* p0);
extern const int COLOR_model__MProperty__intro_mclassdef_61d;
extern const int COLOR_model__MProperty__name_61d;
extern const int COLOR_model__MProperty__visibility_61d;
extern const int COLOR_model__MClassDef__intro_mproperties;
extern const int COLOR_model__Model__mproperties;
void model__MProperty__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MProperty___64dmpropdefs;
val* model__MProperty__mpropdefs(val* self);
extern const int COLOR_array__Arraymodel__MProperty_VTMPROPDEF;
void model__MProperty__mpropdefs_61d(val* self, val* p0);
extern const int COLOR_model__MProperty__mpropdefs;
val* model__MProperty__intro(val* self);
val* model__MProperty__to_s(val* self);
extern const int COLOR_model__MProperty__lookup_definitions_cache;
extern const int COLOR_more_collections__HashMap2___91d_93d;
extern const int COLOR_more_collections__HashMap2___91d_93d_61d;
extern const int COLOR_model__MProperty__select_most_specific;
val* model__MProperty__lookup_definitions(val* self, val* p0, val* p1);
extern const int COLOR_model__MProperty___64dlookup_definitions_cache;
val* model__MProperty__lookup_definitions_cache(val* self);
extern const int COLOR_more_collections__HashMap2mmodule__MModulemodel__MTypearray__Arraymodel__MProperty_VTMPROPDEF;
void model__MProperty__lookup_definitions_cache_61d(val* self, val* p0);
val* model__MProperty__lookup_super_definitions(val* self, val* p0, val* p1);
extern const int COLOR_poset__POSetElement___60d;
val* model__MProperty__select_most_specific(val* self, val* p0, val* p1);
extern const int COLOR_model__MProperty__lookup_all_definitions;
val* model__MProperty__lookup_first_definition(val* self, val* p0, val* p1);
extern const int COLOR_model__MProperty__lookup_all_definitions_cache;
extern const int COLOR_model__MModule__linearize_mpropdefs;
extern const int COLOR_array__AbstractArrayRead__reversed;
val* model__MProperty__lookup_all_definitions(val* self, val* p0, val* p1);
extern const int COLOR_model__MProperty___64dlookup_all_definitions_cache;
val* model__MProperty__lookup_all_definitions_cache(val* self);
void model__MProperty__lookup_all_definitions_cache_61d(val* self, val* p0);
extern const int COLOR_model__MProperty__init;
void model__MMethod__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MMethod___64dis_init;
short int model__MMethod__is_init(val* self);
void model__MMethod__is_init_61d(val* self, short int p0);
extern const int COLOR_model__MMethod___64dis_new;
short int model__MMethod__is_new(val* self);
void model__MMethod__is_new_61d(val* self, short int p0);
extern const int COLOR_model__MMethod__is_init;
short int model__MMethod__is_init_for(val* self, val* p0);
void model__MAttribute__init(val* self, val* p0, val* p1, val* p2);
void model__MVirtualTypeProp__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MVirtualTypeProp___64dmvirtualtype;
val* model__MVirtualTypeProp__mvirtualtype(val* self);
void model__MVirtualTypeProp__mvirtualtype_61d(val* self, val* p0);
extern const int COLOR_model__MPropDef___64dlocation;
val* model__MPropDef__location(val* self);
void model__MPropDef__location_61d(val* self, val* p0);
extern const int COLOR_model__MPropDef___64dmclassdef;
val* model__MPropDef__mclassdef(val* self);
void model__MPropDef__mclassdef_61d(val* self, val* p0);
extern const int COLOR_model__MPropDef___64dmproperty;
val* model__MPropDef__mproperty(val* self);
extern const int COLOR_model__MPropDef_VTMPROPERTY;
void model__MPropDef__mproperty_61d(val* self, val* p0);
extern const int COLOR_model__MPropDef__mclassdef_61d;
extern const int COLOR_model__MPropDef__mproperty_61d;
extern const int COLOR_model__MPropDef__location_61d;
extern const int COLOR_model__MClassDef__mpropdefs;
extern const int COLOR_model__MPropDef__to_s_61d;
void model__MPropDef__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MPropDef___64dto_s;
val* model__MPropDef__to_s(val* self);
void model__MPropDef__to_s_61d(val* self, val* p0);
extern const int COLOR_model__MPropDef__mproperty;
extern const int COLOR_model__MProperty__intro;
short int model__MPropDef__is_intro(val* self);
extern const int COLOR_model__MPropDef_VTMPROPDEF;
val* model__MPropDef__lookup_next_definition(val* self, val* p0, val* p1);
extern const int COLOR_model__MPropDef__init;
void model__MMethodDef__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MMethodDef___64dmsignature;
val* model__MMethodDef__msignature(val* self);
void model__MMethodDef__msignature_61d(val* self, val* p0);
extern const int COLOR_model__MMethodDef___64dis_abstract;
short int model__MMethodDef__is_abstract(val* self);
void model__MMethodDef__is_abstract_61d(val* self, short int p0);
void model__MAttributeDef__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MAttributeDef___64dstatic_mtype;
val* model__MAttributeDef__static_mtype(val* self);
void model__MAttributeDef__static_mtype_61d(val* self, val* p0);
void model__MVirtualTypeDef__init(val* self, val* p0, val* p1, val* p2);
extern const int COLOR_model__MVirtualTypeDef___64dbound;
val* model__MVirtualTypeDef__bound(val* self);
void model__MVirtualTypeDef__bound_61d(val* self, val* p0);
extern const int COLOR_model__MClassKind___64dto_s;
val* model__MClassKind__to_s(val* self);
void model__MClassKind__to_s_61d(val* self, val* p0);
extern const int COLOR_model__MClassKind___64dneed_init;
short int model__MClassKind__need_init(val* self);
void model__MClassKind__need_init_61d(val* self, short int p0);
extern const int COLOR_model__MClassKind__to_s_61d;
extern const int COLOR_model__MClassKind__need_init_61d;
void model__MClassKind__init(val* self, val* p0, short int p1);
val* NEW_model__MClassKind(const struct type* type);
extern const struct type type_model__MClassKind;
extern const int COLOR_model__MClassKind__init;
val* model__Object__abstract_kind(val* self);
val* model__Object__concrete_kind(val* self);
val* model__Object__interface_kind(val* self);
val* model__Object__enum_kind(val* self);
val* model__Object__extern_kind(val* self);
